{"version":3,"sources":["reducers/authSlice.tsx","services/postServices.js","reducers/feedSlice.tsx","reducers/apiSlice.tsx","app/store.ts","app/hooks.ts","services/accountServices.js","components/Sidebar/Sidebar.tsx","components/common/LoadingButton.tsx","components/Feed/PostForm.tsx","components/Feed/PostComments.tsx","components/Feed/Post.tsx","components/Feed/Feed.tsx","components/AuthRoute/AuthRoute.tsx","components/LoginPage/LoginPage.tsx","services/userServices.js","components/SidebarWidgets/SuggestedUser.tsx","components/SidebarWidgets/Suggested.tsx","components/SidebarRight/SidebarRight.tsx","components/Feed/SubFeed.tsx","components/Profile/Profile.tsx","components/Register/Register.tsx","app.tsx","index.tsx","components/Feed/Post.module.css","components/LoginPage/LoginPage.module.css","components/Sidebar/Sidebar.module.css","components/Feed/PostForm.module.css","components/Profile/Profile.module.css","components/Feed/Feed.module.css","components/Feed/PostComments.module.css","components/SidebarWidgets/Suggested.module.css","components/common/LoadingButton.module.css","app.module.css","components/SidebarRight/SidebarRight.module.css"],"names":["authSlice","createSlice","name","initialState","isLoggedIn","user","reducers","login","state","action","payload","logout","actions","baseURL","headersList","createComment","post_id","content","a","body","fetch","method","headers","credentials","JSON","stringify","res","getComments","url","json","feedSlice","addPostToTop","setPosts","posts","clearFeed","feedLikePost","map","post","liked","like_count","feedUnlikePost","apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getUser","query","username","getUserPosts","getAllPosts","providesTags","getSuggestedUsers","getSubPosts","mutation","register","createPost","postContent","invalidatesTags","likePost","onQueryStarted","dispatch","queryFulfilled","util","updateQueryData","undefined","console","log","forEach","e","unlikePost","useGetAllPostsQuery","useGetSubPostsQuery","useCreatePostMutation","useLikePostMutation","useUnlikePostMutation","useGetUserQuery","useGetUserPostsQuery","useLoginMutation","useRegisterMutation","useGetSuggestedUsersQuery","persistConfig","key","storage","whitelist","combineReducers","auth","feed","reducer","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","concat","useAppDispatch","useDispatch","useAppSelector","useSelector","userLogout","result","Sidebar","history","useHistory","handleNavClick","option","target","id","initiate","subscribe","forceRefetch","push","handleLogout","className","Styles","style","fontSize","onClick","LoadingButton","variant","isLoading","Button","CircularProgress","stringToColor","string","i","hash","length","charCodeAt","color","toString","substr","stringAvatar","sx","bgcolor","children","toUpperCase","PostForm","useState","setPost","image","setImage","handleNewPost","unwrap","Avatar","placeholder","onChange","value","type","PostComments","comments","refreshCom","setPostContent","handleNewComment","handleKeyPress","which","preventDefault","stopPropagation","onKeyPress","comment","postStyles","screenname","screen_name","months","Post","open","setOpen","setComments","comVis","setComVis","createdDate","Date","created_at","currentDate","timeDiff","Math","round","abs","getTime","refreshComments","coms","toggleComments","handleRedirectProfile","getMonth","getDay","image_url","src","alt","comment_count","Modal","onClose","Feed","data","isSuccess","index","AuthRoute","rest","loggedIn","render","location","to","pathname","from","LoginPage","setUsername","password","setPassword","loginUser","handleLogin","pass","handleRegister","followUser","jsonRes","SuggestedUser","Suggested","users","SidebarRight","SubFeed","Profile","useParams","isSucc2","goBack","Register","setScreenname","loginLoading","loginSuccess","useEffect","App","path","persistor","persistStore","ReactDOM","StrictMode","loading","basename","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.aa558ab0.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    isLoggedIn: false,\r\n    user: \"\",\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.isLoggedIn = true;\r\n      state.user = action.payload.user;\r\n    },\r\n    logout: (state) => {\r\n      state.isLoggedIn = false;\r\n      state.user = \"\";\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n","export const baseURL = \"https://safe-wave-92099.herokuapp.com\";\r\nexport let headersList = {\r\n  \"Content-Type\": \"application/json\",\r\n};\r\n\r\nconst getAllUserPosts = async () => {\r\n  const url = baseURL + \"/posts/getUserPosts\";\r\n  let res = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n  });\r\n  let jsonRes = await res.json();\r\n  // console.log(jsonRes);\r\n  return jsonRes;\r\n};\r\n\r\nconst getAllSubscribedPosts = async () => {\r\n  const url = baseURL + \"/posts/getSubscribedPosts\";\r\n  let res = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n  });\r\n  let jsonRes = await res.json();\r\n  return jsonRes;\r\n};\r\n\r\nconst getAllPosts = async () => {\r\n  const url = baseURL + \"/posts/getAllPosts\";\r\n  let res = await fetch(url, {\r\n    mode: \"cors\",\r\n    method: \"GET\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n  });\r\n  let jsonRes = await res.json();\r\n  // console.log(jsonRes);\r\n  return jsonRes;\r\n};\r\nconst makeNewPost = async (content, image) => {\r\n  const url = baseURL + \"/posts/new\";\r\n  let body = {\r\n    content,\r\n    image,\r\n  };\r\n  let res = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n    body: JSON.stringify(body),\r\n  });\r\n  return res;\r\n};\r\n\r\nconst likePost = async (post_id) => {\r\n  const url = baseURL + \"/posts/likePost\";\r\n  let body = {\r\n    post_id,\r\n  };\r\n  let res = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n    body: JSON.stringify(body),\r\n  });\r\n  return res;\r\n};\r\n\r\nconst unlikePost = async (post_id) => {\r\n  const url = baseURL + \"/posts/unlikePost\";\r\n  let body = {\r\n    post_id,\r\n  };\r\n  let res = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n    body: JSON.stringify(body),\r\n  });\r\n  return res;\r\n};\r\n\r\nconst createComment = async (post_id, content) => {\r\n  const url = baseURL + \"/posts/createComment\";\r\n  let body = {\r\n    post_id,\r\n    content,\r\n  };\r\n  let res = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n    body: JSON.stringify(body),\r\n  });\r\n  return res;\r\n};\r\n\r\nconst getComments = async (post_id) => {\r\n  const url = baseURL + `/posts/${post_id}/comments`;\r\n  let res = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n  });\r\n  return await res.json();\r\n};\r\nexport {\r\n  getAllUserPosts,\r\n  makeNewPost,\r\n  getAllSubscribedPosts,\r\n  getAllPosts,\r\n  likePost,\r\n  getComments,\r\n  createComment,\r\n  unlikePost,\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  getAllPosts,\r\n  getAllSubscribedPosts,\r\n  likePost,\r\n  unlikePost,\r\n} from \"../services/postServices\";\r\n\r\ntype feedSliceState = {\r\n  content: string;\r\n  username: string;\r\n  created_at: string;\r\n  liked: boolean;\r\n  post_id: number;\r\n  image_url: string;\r\n  like_count: number;\r\n  comment_count: number;\r\n}[];\r\nconst initialState: feedSliceState = [];\r\n\r\nlet feedSlice = createSlice({\r\n  name: \"feed\",\r\n  initialState,\r\n  reducers: {\r\n    addPostToTop: (state, action) => {\r\n      return [action.payload, ...state];\r\n    },\r\n    setPosts: (state, action) => {\r\n      return action.payload.posts;\r\n    },\r\n    clearFeed: (state) => {\r\n      return [];\r\n    },\r\n    feedLikePost: (state, action) => {\r\n      return state.map((post) =>\r\n        post.post_id === action.payload.post_id\r\n          ? { ...post, liked: true, like_count: post.like_count + 1 }\r\n          : post\r\n      );\r\n    },\r\n    feedUnlikePost: (state, action) => {\r\n      return state.map((post) =>\r\n        post.post_id === action.payload.post_id\r\n          ? { ...post, liked: false, like_count: post.like_count - 1 }\r\n          : post\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const updateAllPosts = () => {\r\n  return (dispatch: any, getState: any) => {\r\n    getAllPosts().then((posts) => {\r\n      dispatch(setPosts({ posts }));\r\n      // console.log(posts);\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateSubscribedPosts = () => {\r\n  return (dispatch: any, getState: any) => {\r\n    getAllSubscribedPosts().then((posts) => {\r\n      dispatch(setPosts({ posts }));\r\n      // console.log(posts);\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateLikePost = (post_id: number) => {\r\n  return (dispatch: any, getState: any) => {\r\n    likePost(post_id);\r\n    dispatch(feedLikePost({ post_id }));\r\n  };\r\n};\r\n\r\nexport const updateUnlikePost = (post_id: number) => {\r\n  return (dispatch: any, getState: any) => {\r\n    unlikePost(post_id);\r\n    dispatch(feedUnlikePost({ post_id }));\r\n  };\r\n};\r\nexport const {\r\n  addPostToTop,\r\n  setPosts,\r\n  clearFeed,\r\n  feedLikePost,\r\n  feedUnlikePost,\r\n} = feedSlice.actions;\r\nexport default feedSlice.reducer;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport type PostRType = PostType[];\r\n\r\nexport type PostType = {\r\n  content: string;\r\n  username: string;\r\n  created_at: string;\r\n  liked: boolean;\r\n  post_id: number;\r\n  image_url: string;\r\n  like_count: number;\r\n  comment_count: number;\r\n  screen_name: string;\r\n};\r\n\r\nexport type User = {\r\n  username: string;\r\n  screen_name: string;\r\n  bio: string;\r\n};\r\n\r\nexport const apiSlice = createApi({\r\n  reducerPath: \"api\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://safe-wave-92099.herokuapp.com/\",\r\n    credentials: \"include\",\r\n  }),\r\n  tagTypes: [\"Post\"],\r\n  endpoints: (builder) => ({\r\n    getUser: builder.query<User, string>({\r\n      query: (username) => `user/${username}`,\r\n    }),\r\n    getUserPosts: builder.query<PostRType, string>({\r\n      query: (username) => `user/${username}/posts`,\r\n    }),\r\n    getAllPosts: builder.query<PostRType, void>({\r\n      query: () => \"posts/getAllPosts\",\r\n      providesTags: [\"Post\"],\r\n    }),\r\n    getSuggestedUsers: builder.query<any, void>({\r\n      query: () => \"user/suggestedUsers\",\r\n    }),\r\n    getSubPosts: builder.query<PostRType, void>({\r\n      query: () => \"posts/getSubscribedPosts\",\r\n      providesTags: [\"Post\"],\r\n    }),\r\n    login: builder.mutation({\r\n      query: (body) => ({\r\n        url: \"account/login\",\r\n        method: \"POST\",\r\n        body: body,\r\n      }),\r\n    }),\r\n    register: builder.mutation({\r\n      query: (body) => ({\r\n        url: \"account/register\",\r\n        method: \"POST\",\r\n        body: body,\r\n      }),\r\n    }),\r\n    createPost: builder.mutation({\r\n      query: (postContent) => ({\r\n        url: \"posts/new\",\r\n        method: \"POST\",\r\n        body: postContent,\r\n      }),\r\n      invalidatesTags: [\"Post\"],\r\n    }),\r\n    likePost: builder.mutation<void, number>({\r\n      query: (post_id) => ({\r\n        url: \"posts/likePost\",\r\n        method: \"POST\",\r\n        body: { post_id },\r\n      }),\r\n      async onQueryStarted(post_id, { dispatch, queryFulfilled }) {\r\n        try {\r\n          //await queryFulfilled;\r\n          dispatch(\r\n            apiSlice.util.updateQueryData(\"getAllPosts\", undefined, (posts) => {\r\n              console.log(\"patching\");\r\n              posts.forEach((post) => {\r\n                if (post.post_id === post_id) {\r\n                  post.like_count++;\r\n                  post.liked = true;\r\n                }\r\n              });\r\n            })\r\n          );\r\n          dispatch(\r\n            apiSlice.util.updateQueryData(\"getSubPosts\", undefined, (posts) => {\r\n              console.log(\"patching\");\r\n              posts.forEach((post) => {\r\n                if (post.post_id === post_id) {\r\n                  post.like_count++;\r\n                  post.liked = true;\r\n                }\r\n              });\r\n            })\r\n          );\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      },\r\n    }),\r\n    unlikePost: builder.mutation<void, number>({\r\n      query: (post_id) => ({\r\n        url: \"posts/unlikePost\",\r\n        method: \"POST\",\r\n        body: { post_id },\r\n      }),\r\n      async onQueryStarted(post_id, { dispatch, queryFulfilled }) {\r\n        try {\r\n          //await queryFulfilled;\r\n          dispatch(\r\n            apiSlice.util.updateQueryData(\"getAllPosts\", undefined, (posts) => {\r\n              console.log(\"patching\");\r\n              posts.forEach((post) => {\r\n                if (post.post_id === post_id) {\r\n                  post.like_count--;\r\n                  post.liked = false;\r\n                }\r\n              });\r\n            })\r\n          );\r\n          dispatch(\r\n            apiSlice.util.updateQueryData(\"getSubPosts\", undefined, (posts) => {\r\n              console.log(\"patching\");\r\n              posts.forEach((post) => {\r\n                if (post.post_id === post_id) {\r\n                  post.like_count--;\r\n                  post.liked = false;\r\n                }\r\n              });\r\n            })\r\n          );\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetAllPostsQuery,\r\n  useGetSubPostsQuery,\r\n  useCreatePostMutation,\r\n  useLikePostMutation,\r\n  useUnlikePostMutation,\r\n  useGetUserQuery,\r\n  useGetUserPostsQuery,\r\n  useLoginMutation,\r\n  useRegisterMutation,\r\n  useGetSuggestedUsersQuery,\r\n} = apiSlice;\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport authSlice from \"../reducers/authSlice\";\nimport feedSlice from \"../reducers/feedSlice\";\nimport { persistReducer } from \"redux-persist\";\nimport { apiSlice } from \"../reducers/apiSlice\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"auth\"],\n};\n\nconst reducers = combineReducers({\n  auth: authSlice,\n  feed: feedSlice,\n  [apiSlice.reducerPath]: apiSlice.reducer,\n});\nconst persistedReducer = persistReducer(persistConfig, reducers);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(apiSlice.middleware),\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { baseURL, headersList } from \"./postServices\";\r\n\r\nlet userLogin = async (user, pass) => {\r\n  let url = baseURL + \"/account/login\";\r\n  let body = {\r\n    user,\r\n    pass,\r\n  };\r\n  const result = await fetch(url, {\r\n    credentials: \"include\",\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    body: JSON.stringify(body),\r\n  });\r\n  // console.log(result);\r\n  return result;\r\n};\r\n\r\nlet userRegister = async (user, pass, screen_name) => {\r\n  let url = baseURL + \"/account/register\";\r\n  let body = {\r\n    user,\r\n    pass,\r\n    screen_name,\r\n  };\r\n  const result = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    body: JSON.stringify(body),\r\n  });\r\n  return result;\r\n};\r\n\r\nlet userLogout = async () => {\r\n  let url = baseURL + \"/account/logout\";\r\n  const result = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n  });\r\n  return result;\r\n};\r\nexport { userRegister, userLogin, userLogout };\r\n","import React from \"react\";\r\nimport Styles from \"./Sidebar.module.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport { userLogout } from \"../../services/accountServices\";\r\nimport { logout } from \"../../reducers/authSlice\";\r\nimport TextSnippetIcon from \"@mui/icons-material/TextSnippet\";\r\nimport { apiSlice } from \"../../reducers/apiSlice\";\r\n\r\nconst Sidebar = (): JSX.Element => {\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n  const user = useAppSelector((state) => state.auth.user);\r\n  const handleNavClick = async (e: any) => {\r\n    let option = e.target.id;\r\n    // if (option === \"/all\") {\r\n    //   dispatch(updateAllPosts());\r\n    // } else if (option === \"/subscribed\") {\r\n    //   dispatch(updateSubscribedPosts());\r\n    // }\r\n    // dispatch(\r\n    //   api.endpoints.getPosts.initiate(\r\n    //     { count: 5 },\r\n    //     { subscribe: false, forceRefetch: true }\r\n\r\n    if (option === \"/all\") {\r\n      console.log(\"dispatching refetch\");\r\n      dispatch(\r\n        apiSlice.endpoints.getAllPosts.initiate(undefined, {\r\n          subscribe: false,\r\n          forceRefetch: true,\r\n        })\r\n      );\r\n    } else if (option === \"/subscribed\") {\r\n      console.log(\"sub posts\");\r\n      dispatch(\r\n        apiSlice.endpoints.getSubPosts.initiate(undefined, {\r\n          subscribe: false,\r\n          forceRefetch: true,\r\n        })\r\n      );\r\n    }\r\n    history.push(option);\r\n  };\r\n\r\n  const handleLogout = async (e: any) => {\r\n    await userLogout();\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <div className={Styles[\"sidebar-container\"]}>\r\n      <div className={Styles[\"sidebar-logo\"]}>\r\n        <TextSnippetIcon style={{ fontSize: \"40px\" }} />\r\n      </div>\r\n\r\n      <div\r\n        onClick={handleNavClick}\r\n        id={`/profile/${user}`}\r\n        className={Styles[\"sidebar-item\"]}\r\n      >\r\n        Profile\r\n      </div>\r\n      <div\r\n        onClick={handleNavClick}\r\n        id=\"/all\"\r\n        className={Styles[\"sidebar-item\"]}\r\n      >\r\n        All Posts\r\n      </div>\r\n      <div\r\n        onClick={handleNavClick}\r\n        id=\"/subscribed\"\r\n        className={Styles[\"sidebar-item\"]}\r\n      >\r\n        Subscribed Posts\r\n      </div>\r\n      <div\r\n        onClick={handleLogout}\r\n        className={`${Styles[\"sidebar-item\"]} ${Styles[\"sidebar-logout\"]}`}\r\n      >\r\n        Logout\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { Button, CircularProgress } from \"@mui/material\";\r\nimport Styles from \"./LoadingButton.module.css\";\r\nlet LoadingButton = ({\r\n  onClick,\r\n  className,\r\n  variant,\r\n  isLoading,\r\n  content,\r\n}: any) => {\r\n  return (\r\n    <Button variant={variant} className={className} onClick={onClick}>\r\n      {isLoading ? (\r\n        <CircularProgress className={Styles[\"login-circular-indicator\"]} />\r\n      ) : (\r\n        content\r\n      )}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default LoadingButton;\r\n","import { useState } from \"react\";\r\nimport { useAppSelector } from \"../../app/hooks\";\r\nimport Styles from \"./PostForm.module.css\";\r\nimport { useCreatePostMutation } from \"../../reducers/apiSlice\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport LoadingButton from \"../common/LoadingButton\";\r\n\r\nfunction stringToColor(string: string) {\r\n  let hash = 0;\r\n  let i;\r\n\r\n  /* eslint-disable no-bitwise */\r\n  for (i = 0; i < string.length; i += 1) {\r\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  let color = \"#\";\r\n\r\n  for (i = 0; i < 3; i += 1) {\r\n    const value = (hash >> (i * 8)) & 0xff;\r\n    color += `00${value.toString(16)}`.substr(-2);\r\n  }\r\n  /* eslint-enable no-bitwise */\r\n\r\n  return color;\r\n}\r\n\r\nexport function stringAvatar(name: string) {\r\n  return {\r\n    sx: {\r\n      bgcolor: stringToColor(name),\r\n    },\r\n    children: name[0].toUpperCase() + name[1],\r\n  };\r\n}\r\n\r\nconst PostForm = (): JSX.Element => {\r\n  const [post, setPost] = useState(\"\");\r\n  let username = useAppSelector((state) => state.auth.user);\r\n  const [image, setImage] = useState(\"\");\r\n  const [createPost, { isLoading }] = useCreatePostMutation();\r\n  const handleNewPost = async () => {\r\n    await createPost({ content: post, image }).unwrap();\r\n    //await makeNewPost(post, image);\r\n    // if (type === \"all\") dispatch(updateAllPosts());\r\n    // else if (type === \"subscribed\") dispatch(updateSubscribedPosts());\r\n  };\r\n  return (\r\n    <div className={Styles[\"post-form-outer-container\"]}>\r\n      <Avatar\r\n        className={Styles[\"post-form-avatar\"]}\r\n        {...stringAvatar(username)}\r\n      ></Avatar>\r\n      <div className={Styles[\"post-form-container\"]}>\r\n        <textarea\r\n          placeholder=\"Whats Happening?\"\r\n          className={Styles[\"post-text-area\"]}\r\n          onChange={(e) => setPost(e.target.value)}\r\n        ></textarea>\r\n        <div className={Styles[\"post-submit-container\"]}>\r\n          <input\r\n            onChange={(e) => setImage(e.target.value)}\r\n            className={Styles[\"post-image-input\"]}\r\n            type=\"text\"\r\n            placeholder=\"Image URL(optional)\"\r\n          ></input>\r\n          <LoadingButton\r\n            className={Styles[\"post-form-button\"]}\r\n            onClick={handleNewPost}\r\n            variant=\"contained\"\r\n            isLoading={isLoading}\r\n            content=\"Post\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","import { useState } from \"react\";\r\nimport { createComment } from \"../../services/postServices\";\r\nimport Styles from \"./PostComments.module.css\";\r\nimport postStyles from \"./Post.module.css\";\r\nimport { useHistory } from \"react-router\";\r\nconst PostComments = ({\r\n  comments,\r\n  post_id,\r\n  refreshCom,\r\n}: {\r\n  refreshCom: () => Promise<void>;\r\n  post_id: number;\r\n  comments: { screen_name: string; username: string; content: string }[];\r\n}): JSX.Element => {\r\n  const history = useHistory();\r\n  const [postContent, setPostContent] = useState(\"\");\r\n  const handleNewComment = async () => {\r\n    createComment(post_id, postContent);\r\n  };\r\n\r\n  const handleKeyPress = async (e: any) => {\r\n    if (e.which === 13) {\r\n      e.preventDefault();\r\n      await handleNewComment();\r\n      refreshCom();\r\n    }\r\n  };\r\n  return (\r\n    <div className={Styles[\"comments-container\"]}>\r\n      <div\r\n        onClick={(e) => e.stopPropagation()}\r\n        className={Styles[\"comments-input-container\"]}\r\n      >\r\n        <textarea\r\n          onKeyPress={handleKeyPress}\r\n          onChange={(e) => setPostContent(e.target.value)}\r\n          className={Styles[\"comments-input\"]}\r\n        ></textarea>\r\n      </div>\r\n\r\n      {comments.map((comment) => (\r\n        <div className={Styles[\"comments-comment\"]}>\r\n          <div\r\n            onClick={() => history.push(`/profile/${comment.username}`)}\r\n            className={postStyles[\"user-name-container\"]}\r\n          >\r\n            <div className={postStyles.screenname}>{comment.screen_name}</div>\r\n            <div className={postStyles.username}>@{comment.username}</div>\r\n          </div>\r\n          <p>{comment.content}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostComments;\r\n","import { useState } from \"react\";\r\nimport { getComments } from \"../../services/postServices\";\r\nimport Styles from \"./Post.module.css\";\r\nimport PostComments from \"./PostComments\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport CommentIcon from \"@mui/icons-material/Comment\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport { Modal } from \"@mui/material\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { stringAvatar } from \"./PostForm\";\r\nimport {\r\n  PostType,\r\n  useLikePostMutation,\r\n  useUnlikePostMutation,\r\n} from \"../../reducers/apiSlice\";\r\nimport { useHistory } from \"react-router\";\r\nconst months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\",\r\n];\r\n\r\nconst Post = ({ post }: { post: PostType }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [comments, setComments] = useState<\r\n    { screen_name: string; username: string; content: string }[]\r\n  >([]);\r\n  const history = useHistory();\r\n  const [likePost] = useLikePostMutation();\r\n  const [unlikePost] = useUnlikePostMutation();\r\n  const [comVis, setComVis] = useState(false);\r\n  const createdDate = new Date(post.created_at);\r\n  const currentDate = new Date();\r\n  const timeDiff =\r\n    Math.round(Math.abs(createdDate.getTime() - currentDate.getTime()) / 36e5) -\r\n    8;\r\n  //console.log(createdDate, currentDate, timeDiff);\r\n  const handleLike = (e: any) => {\r\n    e.stopPropagation();\r\n    likePost(post.post_id);\r\n\r\n    //dispatch(updateLikePost(post_id));\r\n  };\r\n\r\n  const handleDislike = (e: any) => {\r\n    e.stopPropagation();\r\n    unlikePost(post.post_id);\r\n  };\r\n\r\n  const refreshComments = async () => {\r\n    let coms = await getComments(post.post_id);\r\n    console.log(coms);\r\n    setComments(coms);\r\n  };\r\n  const toggleComments = async () => {\r\n    if (!comVis) refreshComments();\r\n    setComVis(!comVis);\r\n  };\r\n\r\n  const handleRedirectProfile = async () => {\r\n    history.push(`/profile/${post.username}`);\r\n  };\r\n  return (\r\n    <div onClick={toggleComments} className={Styles[\"post-outer-container\"]}>\r\n      <Avatar\r\n        className={Styles[\"post-avatar\"]}\r\n        {...stringAvatar(post.username)}\r\n      />\r\n      <div className={Styles[\"post-container\"]}>\r\n        <div>\r\n          <div className={Styles[\"post-header\"]}>\r\n            <div\r\n              onClick={handleRedirectProfile}\r\n              className={Styles[\"user-name-container\"]}\r\n            >\r\n              <div className={Styles.screenname}>{post.screen_name}</div>\r\n              <div className={Styles.username}>@{post.username}</div>\r\n              <div className={Styles.username}>\r\n                {timeDiff > 24\r\n                  ? `${months[createdDate.getMonth()]} ${createdDate.getDay()}`\r\n                  : `${timeDiff}h`}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p>{post.content}</p>\r\n          {post.image_url !== null && (\r\n            <img\r\n              onClick={() => setOpen(true)}\r\n              className={Styles[\"post-image\"]}\r\n              src={post.image_url}\r\n              alt={post.username}\r\n            ></img>\r\n          )}\r\n          <div className={Styles[\"post-footer\"]}>\r\n            <div className={Styles[\"comment-ind-container\"]}>\r\n              <CommentIcon></CommentIcon>\r\n              <span>{post.comment_count}</span>\r\n            </div>\r\n\r\n            <div\r\n              className={\r\n                post.liked\r\n                  ? Styles[\"material-icon-heart\"]\r\n                  : Styles[\"material-icon-border-heart\"]\r\n              }\r\n            >\r\n              {post.liked ? (\r\n                <FavoriteIcon onClick={handleDislike} />\r\n              ) : (\r\n                <FavoriteBorderIcon onClick={handleLike} />\r\n              )}\r\n              <span>{post.like_count}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {comVis && (\r\n          <PostComments\r\n            refreshCom={refreshComments}\r\n            post_id={post.post_id}\r\n            comments={comments}\r\n          ></PostComments>\r\n        )}\r\n        {post.image_url !== null && (\r\n          <Modal open={open} onClose={() => setOpen(false)}>\r\n            <img\r\n              className={Styles[\"modal-image\"]}\r\n              src={post.image_url}\r\n              alt={post.username}\r\n            ></img>\r\n          </Modal>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { PostType, useGetAllPostsQuery } from \"../../reducers/apiSlice\";\r\nimport Styles from \"./Feed.module.css\";\r\nimport PostForm from \"./PostForm\";\r\nimport Post from \"./Post\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nconst Feed = (): JSX.Element => {\r\n  //const feed = useAppSelector((state) => state.feed);\r\n  // const dispatch = useAppDispatch();\r\n  // const user = useAppSelector((state) => state.auth.user);\r\n  const { data: feed, isLoading, isSuccess } = useGetAllPostsQuery();\r\n\r\n  let content;\r\n  // useEffect(() => {\r\n  //   if (user !== \"\") {\r\n  //     if (type === \"all\") {\r\n  //       dispatch(updateAllPosts());\r\n  //     } else if (type === \"subscribed\") {\r\n  //       dispatch(updateSubscribedPosts());\r\n  //     }\r\n  //   }\r\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, [user, dispatch]);\r\n  if (isLoading) content = <CircularProgress></CircularProgress>;\r\n  else if (isSuccess)\r\n    content = feed!.map((post: PostType, index: any) => (\r\n      <Post post={post}></Post>\r\n    ));\r\n  console.log(feed);\r\n  return (\r\n    <div className={Styles[\"feed-container\"]}>\r\n      <h3 className={Styles[\"feed-header\"]}>Home</h3>\r\n      <PostForm></PostForm>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","import { Route, Redirect } from \"react-router\";\r\nimport { useAppSelector } from \"../../app/hooks\";\r\n\r\nconst AuthRoute = ({ children, ...rest }: any) => {\r\n  const loggedIn = useAppSelector((state) => state.auth.isLoggedIn);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        loggedIn ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthRoute;\r\n","import { login } from \"../../reducers/authSlice\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport LoadingButton from \"../common/LoadingButton\";\r\nimport { useHistory } from \"react-router\";\r\nimport Styles from \"./LoginPage.module.css\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useLoginMutation } from \"../../reducers/apiSlice\";\r\n\r\nconst LoginPage = (): JSX.Element => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  let [loginUser, { isSuccess, isLoading }] = useLoginMutation();\r\n  let loggedIn = useAppSelector((state) => state.auth.isLoggedIn);\r\n  let history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n\r\n  if (loggedIn) {\r\n    history.push(\"/all\");\r\n  }\r\n  const handleLogin = async (e: any) => {\r\n    e.preventDefault();\r\n    loginUser({ user: username, pass: password });\r\n    // const loginResult = await userLogin(username, password);\r\n    // if (loginResult.status === 202) {\r\n    //   dispatch(login({ user: username }));\r\n    //   history.push(\"/feed\");\r\n    // }\r\n  };\r\n\r\n  const handleRegister = async (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/register\");\r\n  };\r\n\r\n  if (isSuccess) {\r\n    dispatch(login({ user: username }));\r\n    history.push(\"/feed\");\r\n  }\r\n\r\n  return (\r\n    <form className={Styles[\"login-form-container\"]}>\r\n      <label>\r\n        <b>Username</b>\r\n      </label>\r\n      <input\r\n        className={Styles[\"login-form-input\"]}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        placeholder=\"Username\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label>\r\n        <b>Password</b>\r\n      </label>\r\n      <input\r\n        className={Styles[\"login-form-input\"]}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        placeholder=\"Password\"\r\n        type=\"password\"\r\n      ></input>\r\n      <div className={Styles[\"login-button-container\"]}>\r\n        <LoadingButton\r\n          variant=\"outlined\"\r\n          className={`${Styles[\"login-form-input\"]} ${Styles[\"login-form-button\"]}`}\r\n          onClick={handleLogin}\r\n          content=\"Log In\"\r\n          isLoading={isLoading}\r\n        ></LoadingButton>\r\n        <Button\r\n          variant=\"outlined\"\r\n          className={Styles[\"login-form-input\"]}\r\n          onClick={handleRegister}\r\n        >\r\n          Sign Up\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import { baseURL, headersList } from \"./postServices\";\r\n\r\nconst getSuggestedUsers = async () => {\r\n  const url = baseURL + \"/user/suggestedUsers\";\r\n  let res = await fetch(url, {\r\n    type: \"cors\",\r\n    method: \"GET\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n  });\r\n  let jsonRes = await res.json();\r\n  return jsonRes;\r\n};\r\n\r\nconst followUser = async (target) => {\r\n  const url = baseURL + \"/user/followUser\";\r\n  const body = {\r\n    target: target,\r\n  };\r\n  let res = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n    body: JSON.stringify(body),\r\n  });\r\n  let jsonRes = await res.json();\r\n  return jsonRes;\r\n};\r\n\r\nexport { getSuggestedUsers, followUser };\r\n","import { followUser } from \"../../services/userServices\";\r\nimport Styles from \"./Suggested.module.css\";\r\n\r\nconst SuggestedUser = ({ username }: { username: string }): JSX.Element => {\r\n  const handleFollow = () => {\r\n    followUser(username);\r\n  };\r\n  return (\r\n    <div className={Styles[\"suggested-entry\"]}>\r\n      {username}\r\n      <button onClick={handleFollow}>Follow</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuggestedUser;\r\n","import Styles from \"./Suggested.module.css\";\r\nimport SuggestedUser from \"./SuggestedUser\";\r\nimport { useGetSuggestedUsersQuery } from \"../../reducers/apiSlice\";\r\nconst Suggested = (): JSX.Element => {\r\n  const { data: users, isSuccess } = useGetSuggestedUsersQuery();\r\n  // useEffect(() => {\r\n  //   const popUsers = async () => {\r\n  //     let userList = await getSuggestedUsers();\r\n  //     // console.log(userList);\r\n  //     setUsers(userList);\r\n  //   };\r\n  //   popUsers();\r\n  // }, []);\r\n  return (\r\n    <div className={Styles[\"widget-container\"]}>\r\n      <h5>Suggested Users</h5>\r\n      {isSuccess &&\r\n        users.map((user: any, index: any) => (\r\n          <SuggestedUser\r\n            key={user.username}\r\n            username={user.username}\r\n          ></SuggestedUser>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Suggested;\r\n","import Suggested from \"../SidebarWidgets/Suggested\";\r\nimport Styles from \"./SidebarRight.module.css\";\r\n\r\nconst SidebarRight = (): JSX.Element => {\r\n  return (\r\n    <div className={Styles[\"sidebar-container\"]}>\r\n      <Suggested />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarRight;\r\n","import { PostType, useGetSubPostsQuery } from \"../../reducers/apiSlice\";\r\nimport Styles from \"./Feed.module.css\";\r\nimport PostForm from \"./PostForm\";\r\nimport Post from \"./Post\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nconst SubFeed = (): JSX.Element => {\r\n  const { data: feed, isLoading, isSuccess } = useGetSubPostsQuery();\r\n\r\n  let content;\r\n\r\n  if (isLoading) content = <CircularProgress></CircularProgress>;\r\n  else if (isSuccess)\r\n    content = feed!.map((post: PostType, index: any) => (\r\n      <Post post={post}></Post>\r\n    ));\r\n  return (\r\n    <div className={Styles[\"feed-container\"]}>\r\n      <h3 className={Styles[\"feed-header\"]}>Home</h3>\r\n      <PostForm></PostForm>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubFeed;\r\n","import Styles from \"./Profile.module.css\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport {\r\n  PostType,\r\n  useGetUserPostsQuery,\r\n  useGetUserQuery,\r\n} from \"../../reducers/apiSlice\";\r\nimport Post from \"../Feed/Post\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { useHistory } from \"react-router\";\r\nlet Profile = (): JSX.Element => {\r\n  let history = useHistory();\r\n  let { username } = useParams<{ username: string }>();\r\n  const { data: user } = useGetUserQuery(username);\r\n\r\n  let content;\r\n  const { data: posts, isSuccess: isSucc2 } = useGetUserPostsQuery(username);\r\n  console.log(user);\r\n  if (isSucc2)\r\n    content = posts!.map((post: PostType, index: any) => (\r\n      <Post post={post}></Post>\r\n    ));\r\n  return (\r\n    <div className={Styles[\"profile-container\"]}>\r\n      <div className={Styles[\"profile-header-container\"]}>\r\n        <ArrowBackIcon\r\n          onClick={() => history.goBack()}\r\n          className={Styles[\"back-arrow-icon\"]}\r\n        />\r\n      </div>\r\n      <div className={Styles[\"profile-image-container\"]}></div>\r\n      <div className={Styles[\"name-section\"]}>\r\n        <Avatar className={Styles[\"profile-avatar\"]} />\r\n        <h2>{user?.screen_name}</h2>\r\n        <div>@{user?.username}</div>\r\n      </div>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { login } from \"../../reducers/authSlice\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Styles from \"../LoginPage/LoginPage.module.css\";\r\nimport LoadingButton from \"../common/LoadingButton\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useLoginMutation, useRegisterMutation } from \"../../reducers/apiSlice\";\r\nconst Register = (): JSX.Element => {\r\n  const [screen_name, setScreenname] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  let [register, { isLoading, isSuccess }] = useRegisterMutation();\r\n  let [loginUser, { isLoading: loginLoading, isSuccess: loginSuccess }] =\r\n    useLoginMutation();\r\n  let loggedIn = useAppSelector((state) => state.auth.isLoggedIn);\r\n  let history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n\r\n  if (loggedIn) history.push(\"/all\");\r\n\r\n  const handleRegister = async (e: any) => {\r\n    e.preventDefault();\r\n    register({ user: username, pass: password, screen_name });\r\n    // const registerResult = await userRegister(username, password, screen_name);\r\n    // if (registerResult.status === 202) {\r\n    //   const loginResult = await userLogin(username, password);\r\n    //   if (loginResult.status === 202) {\r\n    //     dispatch(login({ user: username }));\r\n    //     history.push(\"/all\");\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      loginUser({ user: username, pass: password });\r\n    }\r\n  }, [isSuccess, loginUser, password, username]);\r\n\r\n  if (loginSuccess) {\r\n    dispatch(login({ user: username }));\r\n    history.push(\"/feed\");\r\n  }\r\n\r\n  return (\r\n    <form className={Styles[\"login-form-container\"]}>\r\n      <label>\r\n        <b>Screen Name</b>\r\n      </label>\r\n      <input\r\n        className={Styles[\"login-form-input\"]}\r\n        onChange={(e) => setScreenname(e.target.value)}\r\n        placeholder=\"Screen Name\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label>\r\n        <b>Username</b>\r\n      </label>\r\n      <input\r\n        className={Styles[\"login-form-input\"]}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        placeholder=\"Username\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label>\r\n        <b>Password</b>\r\n      </label>\r\n      <input\r\n        className={Styles[\"login-form-input\"]}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        placeholder=\"Password\"\r\n        type=\"password\"\r\n      ></input>\r\n      <div className={Styles[\"login-button-container\"]}>\r\n        <LoadingButton\r\n          variant=\"outlined\"\r\n          className={Styles[\"login-form-input\"]}\r\n          onClick={handleRegister}\r\n          isLoading={isLoading || loginLoading}\r\n          content=\"Sign Up\"\r\n        ></LoadingButton>\r\n        <Button\r\n          variant=\"outlined\"\r\n          className={Styles[\"login-form-input\"]}\r\n          onClick={() => history.push(\"/login\")}\r\n        >\r\n          Back to Login Page\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import Sidebar from \"./components/Sidebar/Sidebar\";\r\nimport Feed from \"./components/Feed/Feed\";\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\nimport AuthRoute from \"./components/AuthRoute/AuthRoute\";\r\nimport LoginPage from \"./components/LoginPage/LoginPage\";\r\nimport Styles from \"./app.module.css\";\r\nimport SidebarRight from \"./components/SidebarRight/SidebarRight\";\r\nimport SubFeed from \"./components/Feed/SubFeed\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport Register from \"./components/Register/Register\";\r\n\r\nconst App = (): JSX.Element => {\r\n  return (\r\n    <div className={Styles[\"app-container\"]}>\r\n      <Switch>\r\n        <Route path=\"/login\">\r\n          <LoginPage></LoginPage>\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          <Register></Register>\r\n        </Route>\r\n        <AuthRoute path=\"/all\">\r\n          <Sidebar />\r\n          <Feed></Feed>\r\n          <SidebarRight />\r\n        </AuthRoute>\r\n        <AuthRoute path=\"/subscribed\">\r\n          <Sidebar />\r\n          <SubFeed></SubFeed>\r\n          <SidebarRight />\r\n        </AuthRoute>\r\n        <Route path=\"/profile/:username\">\r\n          <Sidebar />\r\n          <Profile />\r\n          <SidebarRight />\r\n        </Route>\r\n        <AuthRoute path=\"/\">\r\n          <Redirect to=\"/all\"></Redirect>\r\n        </AuthRoute>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport App from \"./app\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nlet persistor = persistStore(store);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <HashRouter basename=\"/message-board\">\n          <App></App>\n        </HashRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post-container\":\"Post_post-container__1eauk\",\"post-image\":\"Post_post-image__1eJ1c\",\"post-header\":\"Post_post-header__1RNuL\",\"material-icon-heart\":\"Post_material-icon-heart__2TuZ3\",\"material-icon-border-heart\":\"Post_material-icon-border-heart__Gei2f\",\"post-footer\":\"Post_post-footer__THcfM\",\"comment-ind-container\":\"Post_comment-ind-container__DWjBB\",\"modal-image\":\"Post_modal-image__1AGpc\",\"user-name-container\":\"Post_user-name-container__3UKS6\",\"screenname\":\"Post_screenname__fiKFS\",\"username\":\"Post_username__uDN1e\",\"post-avatar\":\"Post_post-avatar__1h6T7\",\"post-outer-container\":\"Post_post-outer-container__nvX_u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-form-container\":\"LoginPage_login-form-container__2uptE\",\"login-form-input\":\"LoginPage_login-form-input__10So9\",\"login-button-container\":\"LoginPage_login-button-container__ZrLNH\",\"login-circular-indicator\":\"LoginPage_login-circular-indicator__1_ruz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar-container\":\"Sidebar_sidebar-container__3ve-Y\",\"sidebar-logo\":\"Sidebar_sidebar-logo__2qQro\",\"sidebar-item\":\"Sidebar_sidebar-item__3tqF5\",\"sidebar-logout\":\"Sidebar_sidebar-logout__29fYi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post-text-area\":\"PostForm_post-text-area__2tqHQ\",\"post-form-container\":\"PostForm_post-form-container__2adad\",\"post-form-outer-container\":\"PostForm_post-form-outer-container__21ASL\",\"post-form-avatar\":\"PostForm_post-form-avatar__qfdX1\",\"post-submit-container\":\"PostForm_post-submit-container__2C7HZ\",\"post-image-input\":\"PostForm_post-image-input__3-g9l\",\"post-form-button\":\"PostForm_post-form-button__27-oG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-container\":\"Profile_profile-container__25Udl\",\"profile-header-container\":\"Profile_profile-header-container__1RwmA\",\"profile-image-container\":\"Profile_profile-image-container__3f9_L\",\"profile-avatar\":\"Profile_profile-avatar__23Wgy\",\"back-arrow-icon\":\"Profile_back-arrow-icon__2zzmd\",\"name-section\":\"Profile_name-section__2ocHA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed-container\":\"Feed_feed-container__24Wie\",\"feed-header\":\"Feed_feed-header__3uiu4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments-container\":\"PostComments_comments-container__3uFEf\",\"comments-input-container\":\"PostComments_comments-input-container__3dFH5\",\"comments-input\":\"PostComments_comments-input__ow6cX\",\"comments-comment\":\"PostComments_comments-comment__1wGZk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"widget-container\":\"Suggested_widget-container__3P3du\",\"suggested-entry\":\"Suggested_suggested-entry__1F6jb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-circular-indicator\":\"LoadingButton_login-circular-indicator__1elvg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-container\":\"app_app-container__25y9D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar-container\":\"SidebarRight_sidebar-container__1zSIq\"};"],"sourceRoot":""}