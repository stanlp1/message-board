{"version":3,"sources":["components/Profile/Profile.module.css","reducers/authSlice.tsx","services/postServices.js","reducers/feedSlice.tsx","reducers/apiSlice.tsx","app/store.ts","app/hooks.ts","services/accountServices.js","components/Sidebar/Sidebar.tsx","components/common/LoadingButton.tsx","components/Feed/PostForm.tsx","components/Feed/PostComments.tsx","components/Feed/Post.tsx","components/Feed/Feed.tsx","components/AuthRoute/AuthRoute.tsx","components/LoginPage/LoginPage.tsx","components/SidebarWidgets/SuggestedUser.tsx","components/SidebarWidgets/Suggested.tsx","components/SidebarRight/SidebarRight.tsx","components/Profile/FollowInfo.tsx","components/Feed/SubFeed.tsx","components/Profile/Profile.tsx","components/Register/Register.tsx","app.tsx","index.tsx","components/Feed/Post.module.css","components/LoginPage/LoginPage.module.css","components/Sidebar/Sidebar.module.css","components/SidebarWidgets/Suggested.module.css","components/Feed/Feed.module.css","components/Feed/PostForm.module.css","components/Feed/PostComments.module.css","components/common/LoadingButton.module.css","app.module.css","components/SidebarRight/SidebarRight.module.css"],"names":["module","exports","authSlice","createSlice","name","initialState","isLoggedIn","user","reducers","login","state","action","payload","logout","actions","baseURL","headersList","createComment","post_id","content","a","body","fetch","method","headers","credentials","JSON","stringify","res","getComments","url","json","feedSlice","addPostToTop","setPosts","posts","clearFeed","feedLikePost","map","post","liked","like_count","feedUnlikePost","apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getFollower","query","username","getFollowing","getUser","getUserPosts","getAllPosts","providesTags","getSuggestedUsers","getSubPosts","follow","mutation","register","createPost","postContent","invalidatesTags","likePost","onQueryStarted","dispatch","queryFulfilled","util","updateQueryData","undefined","console","log","forEach","e","unlikePost","useGetAllPostsQuery","useGetSubPostsQuery","useCreatePostMutation","useLikePostMutation","useUnlikePostMutation","useGetUserQuery","useGetUserPostsQuery","useLoginMutation","useRegisterMutation","useGetSuggestedUsersQuery","useFollowMutation","useGetFollowerQuery","useGetFollowingQuery","persistConfig","key","storage","whitelist","combineReducers","auth","feed","reducer","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","concat","useAppDispatch","useDispatch","useAppSelector","useSelector","userLogout","result","Sidebar","history","useHistory","handleNavClick","option","target","id","initiate","subscribe","forceRefetch","push","handleLogout","className","Styles","onClick","location","pathname","includes","LoadingButton","type","disabledText","variant","isLoading","disabled","disabledClass","Button","CircularProgress","stringToColor","string","i","hash","length","charCodeAt","color","toString","substr","stringAvatar","sx","bgcolor","children","toUpperCase","PostForm","useState","setPost","image","setImage","handleNewPost","unwrap","Avatar","placeholder","onChange","value","PostComments","comments","refreshCom","setPostContent","handleNewComment","handleKeyPress","which","preventDefault","stopPropagation","onKeyPress","comment","postStyles","screenname","screen_name","months","Post","open","setOpen","setComments","comVis","setComVis","createdDate","Date","created_at","toLocaleString","timeZone","currentDate","timeDiff","Math","round","abs","getTime","refreshComments","coms","toggleComments","handleRedirectProfile","getMonth","getDate","image_url","src","alt","comment_count","Modal","onClose","Feed","data","isSuccess","index","AuthRoute","rest","loggedIn","render","to","from","LoginPage","setUsername","password","setPassword","loginUser","handleLogin","pass","handleTestLogin","handleRegister","SuggestedUser","isLast","PostStyles","followed","Suggested","users","SidebarRight","FollowInfo","useParams","follower","isLoading1","isSuccess1","isFetching1","isFetching","following","isLoading2","isSuccess2","isFetching2","isFollowing","slice","isFollower","goBack","SubFeed","Profile","following_count","follower_count","Register","setScreenname","loginLoading","loginSuccess","useEffect","required","App","path","persistor","persistStore","ReactDOM","StrictMode","loading","basename","document","getElementById"],"mappings":"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","file":"static/js/main.5c56f5f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-container\":\"Profile_profile-container__25Udl\",\"profile-header-container\":\"Profile_profile-header-container__1RwmA\",\"profile-image-container\":\"Profile_profile-image-container__3f9_L\",\"profile-avatar\":\"Profile_profile-avatar__23Wgy\",\"back-arrow-icon\":\"Profile_back-arrow-icon__2zzmd\",\"name-section\":\"Profile_name-section__2ocHA\",\"follow-section\":\"Profile_follow-section__imos-\",\"follow-label\":\"Profile_follow-label__1ekoR\",\"follow-label-container\":\"Profile_follow-label-container__3Zdcx\",\"loading-indicator\":\"Profile_loading-indicator__3CHQH\",\"follower-page-button-container\":\"Profile_follower-page-button-container__FifAH\",\"follower-page-button-inner\":\"Profile_follower-page-button-inner__1gMDu\",\"follower-page-button\":\"Profile_follower-page-button__3ro9c\",\"follower-button-highlight\":\"Profile_follower-button-highlight__32B21\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    isLoggedIn: false,\r\n    user: \"\",\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.isLoggedIn = true;\r\n      state.user = action.payload.user;\r\n    },\r\n    logout: (state) => {\r\n      state.isLoggedIn = false;\r\n      state.user = \"\";\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n","export const baseURL = \"https://safe-wave-92099.herokuapp.com\";\r\nexport let headersList = {\r\n  \"Content-Type\": \"application/json\",\r\n};\r\n\r\nconst getAllUserPosts = async () => {\r\n  const url = baseURL + \"/posts/getUserPosts\";\r\n  let res = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n  });\r\n  let jsonRes = await res.json();\r\n  // console.log(jsonRes);\r\n  return jsonRes;\r\n};\r\n\r\nconst getAllSubscribedPosts = async () => {\r\n  const url = baseURL + \"/posts/getSubscribedPosts\";\r\n  let res = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n  });\r\n  let jsonRes = await res.json();\r\n  return jsonRes;\r\n};\r\n\r\nconst getAllPosts = async () => {\r\n  const url = baseURL + \"/posts/getAllPosts\";\r\n  let res = await fetch(url, {\r\n    mode: \"cors\",\r\n    method: \"GET\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n  });\r\n  let jsonRes = await res.json();\r\n  // console.log(jsonRes);\r\n  return jsonRes;\r\n};\r\nconst makeNewPost = async (content, image) => {\r\n  const url = baseURL + \"/posts/new\";\r\n  let body = {\r\n    content,\r\n    image,\r\n  };\r\n  let res = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n    body: JSON.stringify(body),\r\n  });\r\n  return res;\r\n};\r\n\r\nconst likePost = async (post_id) => {\r\n  const url = baseURL + \"/posts/likePost\";\r\n  let body = {\r\n    post_id,\r\n  };\r\n  let res = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n    body: JSON.stringify(body),\r\n  });\r\n  return res;\r\n};\r\n\r\nconst unlikePost = async (post_id) => {\r\n  const url = baseURL + \"/posts/unlikePost\";\r\n  let body = {\r\n    post_id,\r\n  };\r\n  let res = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n    body: JSON.stringify(body),\r\n  });\r\n  return res;\r\n};\r\n\r\nconst createComment = async (post_id, content) => {\r\n  const url = baseURL + \"/posts/createComment\";\r\n  let body = {\r\n    post_id,\r\n    content,\r\n  };\r\n  let res = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n    body: JSON.stringify(body),\r\n  });\r\n  return res;\r\n};\r\n\r\nconst getComments = async (post_id) => {\r\n  const url = baseURL + `/posts/${post_id}/comments`;\r\n  let res = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n  });\r\n  return await res.json();\r\n};\r\nexport {\r\n  getAllUserPosts,\r\n  makeNewPost,\r\n  getAllSubscribedPosts,\r\n  getAllPosts,\r\n  likePost,\r\n  getComments,\r\n  createComment,\r\n  unlikePost,\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  getAllPosts,\r\n  getAllSubscribedPosts,\r\n  likePost,\r\n  unlikePost,\r\n} from \"../services/postServices\";\r\n\r\ntype feedSliceState = {\r\n  content: string;\r\n  username: string;\r\n  created_at: string;\r\n  liked: boolean;\r\n  post_id: number;\r\n  image_url: string;\r\n  like_count: number;\r\n  comment_count: number;\r\n}[];\r\nconst initialState: feedSliceState = [];\r\n\r\nlet feedSlice = createSlice({\r\n  name: \"feed\",\r\n  initialState,\r\n  reducers: {\r\n    addPostToTop: (state, action) => {\r\n      return [action.payload, ...state];\r\n    },\r\n    setPosts: (state, action) => {\r\n      return action.payload.posts;\r\n    },\r\n    clearFeed: (state) => {\r\n      return [];\r\n    },\r\n    feedLikePost: (state, action) => {\r\n      return state.map((post) =>\r\n        post.post_id === action.payload.post_id\r\n          ? { ...post, liked: true, like_count: post.like_count + 1 }\r\n          : post\r\n      );\r\n    },\r\n    feedUnlikePost: (state, action) => {\r\n      return state.map((post) =>\r\n        post.post_id === action.payload.post_id\r\n          ? { ...post, liked: false, like_count: post.like_count - 1 }\r\n          : post\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const updateAllPosts = () => {\r\n  return (dispatch: any, getState: any) => {\r\n    getAllPosts().then((posts) => {\r\n      dispatch(setPosts({ posts }));\r\n      // console.log(posts);\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateSubscribedPosts = () => {\r\n  return (dispatch: any, getState: any) => {\r\n    getAllSubscribedPosts().then((posts) => {\r\n      dispatch(setPosts({ posts }));\r\n      // console.log(posts);\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateLikePost = (post_id: number) => {\r\n  return (dispatch: any, getState: any) => {\r\n    likePost(post_id);\r\n    dispatch(feedLikePost({ post_id }));\r\n  };\r\n};\r\n\r\nexport const updateUnlikePost = (post_id: number) => {\r\n  return (dispatch: any, getState: any) => {\r\n    unlikePost(post_id);\r\n    dispatch(feedUnlikePost({ post_id }));\r\n  };\r\n};\r\nexport const {\r\n  addPostToTop,\r\n  setPosts,\r\n  clearFeed,\r\n  feedLikePost,\r\n  feedUnlikePost,\r\n} = feedSlice.actions;\r\nexport default feedSlice.reducer;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport type PostType = {\r\n  content: string;\r\n  username: string;\r\n  created_at: string;\r\n  liked: boolean;\r\n  post_id: number;\r\n  image_url: string;\r\n  like_count: number;\r\n  comment_count: number;\r\n  screen_name: string;\r\n};\r\n\r\nexport type User = {\r\n  username: string;\r\n  screen_name: string;\r\n  follower_count: number;\r\n  following_count: number;\r\n  bio: string;\r\n};\r\n\r\nexport type FUser = {\r\n  username: string;\r\n  screen_name: string;\r\n  followed: boolean;\r\n};\r\n\r\nexport const apiSlice = createApi({\r\n  reducerPath: \"api\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://safe-wave-92099.herokuapp.com/\",\r\n    credentials: \"include\",\r\n  }),\r\n  tagTypes: [\"Post\"],\r\n  endpoints: (builder) => ({\r\n    getFollower: builder.query<FUser[], string>({\r\n      query: (username) => `user/${username}/follower`,\r\n    }),\r\n    getFollowing: builder.query<FUser[], string>({\r\n      query: (username) => `user/${username}/following`,\r\n    }),\r\n    getUser: builder.query<User, string>({\r\n      query: (username) => `user/${username}`,\r\n    }),\r\n    getUserPosts: builder.query<PostType[], string>({\r\n      query: (username) => `user/${username}/posts`,\r\n    }),\r\n    getAllPosts: builder.query<PostType[], void>({\r\n      query: () => \"posts/getAllPosts\",\r\n      providesTags: [\"Post\"],\r\n    }),\r\n    getSuggestedUsers: builder.query<any, void>({\r\n      query: () => \"user/suggestedUsers\",\r\n    }),\r\n    getSubPosts: builder.query<PostType[], void>({\r\n      query: () => \"posts/getSubscribedPosts\",\r\n      providesTags: [\"Post\"],\r\n    }),\r\n    follow: builder.mutation({\r\n      query: (body) => ({\r\n        url: \"user/followUser\",\r\n        method: \"POST\",\r\n        body: body,\r\n      }),\r\n    }),\r\n    login: builder.mutation({\r\n      query: (body) => ({\r\n        url: \"account/login\",\r\n        method: \"POST\",\r\n        body: body,\r\n      }),\r\n    }),\r\n    register: builder.mutation({\r\n      query: (body) => ({\r\n        url: \"account/register\",\r\n        method: \"POST\",\r\n        body: body,\r\n      }),\r\n    }),\r\n    createPost: builder.mutation({\r\n      query: (postContent) => ({\r\n        url: \"posts/new\",\r\n        method: \"POST\",\r\n        body: postContent,\r\n      }),\r\n      invalidatesTags: [\"Post\"],\r\n    }),\r\n    likePost: builder.mutation<void, number>({\r\n      query: (post_id) => ({\r\n        url: \"posts/likePost\",\r\n        method: \"POST\",\r\n        body: { post_id },\r\n      }),\r\n      async onQueryStarted(post_id, { dispatch, queryFulfilled }) {\r\n        try {\r\n          //await queryFulfilled;\r\n          dispatch(\r\n            apiSlice.util.updateQueryData(\"getAllPosts\", undefined, (posts) => {\r\n              console.log(\"patching\");\r\n              posts.forEach((post) => {\r\n                if (post.post_id === post_id) {\r\n                  post.like_count++;\r\n                  post.liked = true;\r\n                }\r\n              });\r\n            })\r\n          );\r\n          dispatch(\r\n            apiSlice.util.updateQueryData(\"getSubPosts\", undefined, (posts) => {\r\n              console.log(\"patching\");\r\n              posts.forEach((post) => {\r\n                if (post.post_id === post_id) {\r\n                  post.like_count++;\r\n                  post.liked = true;\r\n                }\r\n              });\r\n            })\r\n          );\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      },\r\n    }),\r\n    unlikePost: builder.mutation<void, number>({\r\n      query: (post_id) => ({\r\n        url: \"posts/unlikePost\",\r\n        method: \"POST\",\r\n        body: { post_id },\r\n      }),\r\n      async onQueryStarted(post_id, { dispatch, queryFulfilled }) {\r\n        try {\r\n          //await queryFulfilled;\r\n          dispatch(\r\n            apiSlice.util.updateQueryData(\"getAllPosts\", undefined, (posts) => {\r\n              console.log(\"patching\");\r\n              posts.forEach((post) => {\r\n                if (post.post_id === post_id) {\r\n                  post.like_count--;\r\n                  post.liked = false;\r\n                }\r\n              });\r\n            })\r\n          );\r\n          dispatch(\r\n            apiSlice.util.updateQueryData(\"getSubPosts\", undefined, (posts) => {\r\n              console.log(\"patching\");\r\n              posts.forEach((post) => {\r\n                if (post.post_id === post_id) {\r\n                  post.like_count--;\r\n                  post.liked = false;\r\n                }\r\n              });\r\n            })\r\n          );\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetAllPostsQuery,\r\n  useGetSubPostsQuery,\r\n  useCreatePostMutation,\r\n  useLikePostMutation,\r\n  useUnlikePostMutation,\r\n  useGetUserQuery,\r\n  useGetUserPostsQuery,\r\n  useLoginMutation,\r\n  useRegisterMutation,\r\n  useGetSuggestedUsersQuery,\r\n  useFollowMutation,\r\n  useGetFollowerQuery,\r\n  useGetFollowingQuery,\r\n} = apiSlice;\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport authSlice from \"../reducers/authSlice\";\nimport feedSlice from \"../reducers/feedSlice\";\nimport { persistReducer } from \"redux-persist\";\nimport { apiSlice } from \"../reducers/apiSlice\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"auth\"],\n};\n\nconst reducers = combineReducers({\n  auth: authSlice,\n  feed: feedSlice,\n  [apiSlice.reducerPath]: apiSlice.reducer,\n});\nconst persistedReducer = persistReducer(persistConfig, reducers);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(apiSlice.middleware),\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { baseURL, headersList } from \"./postServices\";\r\n\r\nlet userLogin = async (user, pass) => {\r\n  let url = baseURL + \"/account/login\";\r\n  let body = {\r\n    user,\r\n    pass,\r\n  };\r\n  const result = await fetch(url, {\r\n    credentials: \"include\",\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    body: JSON.stringify(body),\r\n  });\r\n  // console.log(result);\r\n  return result;\r\n};\r\n\r\nlet userRegister = async (user, pass, screen_name) => {\r\n  let url = baseURL + \"/account/register\";\r\n  let body = {\r\n    user,\r\n    pass,\r\n    screen_name,\r\n  };\r\n  const result = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    body: JSON.stringify(body),\r\n  });\r\n  return result;\r\n};\r\n\r\nlet userLogout = async () => {\r\n  let url = baseURL + \"/account/logout\";\r\n  const result = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n  });\r\n  return result;\r\n};\r\nexport { userRegister, userLogin, userLogout };\r\n","import Styles from \"./Sidebar.module.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport { userLogout } from \"../../services/accountServices\";\r\nimport { logout } from \"../../reducers/authSlice\";\r\nimport TextSnippetIcon from \"@mui/icons-material/TextSnippet\";\r\nimport { apiSlice } from \"../../reducers/apiSlice\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport PersonOutlinedIcon from \"@mui/icons-material/PersonOutlined\";\r\nimport HomeOutlinedIcon from \"@mui/icons-material/HomeOutlined\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport ViewColumnOutlinedIcon from \"@mui/icons-material/ViewColumnOutlined\";\r\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\r\n\r\nconst Sidebar = (): JSX.Element => {\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n  const user = useAppSelector((state) => state.auth.user);\r\n  const handleNavClick = async (e: any) => {\r\n    let option = e.target.id;\r\n    // if (option === \"/all\") {\r\n    //   dispatch(updateAllPosts());\r\n    // } else if (option === \"/subscribed\") {\r\n    //   dispatch(updateSubscribedPosts());\r\n    // }\r\n    // dispatch(\r\n    //   api.endpoints.getPosts.initiate(\r\n    //     { count: 5 },\r\n    //     { subscribe: false, forceRefetch: true }\r\n\r\n    if (option === \"/all\") {\r\n      console.log(\"dispatching refetch\");\r\n      dispatch(\r\n        apiSlice.endpoints.getAllPosts.initiate(undefined, {\r\n          subscribe: false,\r\n          forceRefetch: true,\r\n        })\r\n      );\r\n    } else if (option === \"/subscribed\") {\r\n      console.log(\"sub posts\");\r\n      dispatch(\r\n        apiSlice.endpoints.getSubPosts.initiate(undefined, {\r\n          subscribe: false,\r\n          forceRefetch: true,\r\n        })\r\n      );\r\n    }\r\n    history.push(option);\r\n  };\r\n\r\n  const handleLogout = async (e: any) => {\r\n    await userLogout();\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <div className={Styles[\"sidebar-outer-container\"]}>\r\n      <div className={Styles[\"sidebar-container\"]}>\r\n        <div\r\n          onClick={handleNavClick}\r\n          id=\"/all\"\r\n          className={Styles[\"sidebar-logo-container\"]}\r\n        >\r\n          <TextSnippetIcon className={Styles[\"sidebar-logo\"]} />\r\n        </div>\r\n        <div>\r\n          <div\r\n            onClick={handleNavClick}\r\n            id={`/profile/${user}`}\r\n            className={Styles[\"sidebar-item\"]}\r\n          >\r\n            {history.location.pathname.includes(\"profile\") ? (\r\n              <PersonIcon className={Styles[\"sidebar-logo\"]} />\r\n            ) : (\r\n              <PersonOutlinedIcon className={Styles[\"sidebar-logo\"]} />\r\n            )}\r\n            Profile\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div\r\n            onClick={handleNavClick}\r\n            id=\"/all\"\r\n            className={Styles[\"sidebar-item\"]}\r\n          >\r\n            {history.location.pathname.includes(\"all\") ? (\r\n              <HomeIcon className={Styles[\"sidebar-logo\"]} />\r\n            ) : (\r\n              <HomeOutlinedIcon className={Styles[\"sidebar-logo\"]} />\r\n            )}\r\n            All Posts\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div\r\n            onClick={handleNavClick}\r\n            id=\"/subscribed\"\r\n            className={Styles[\"sidebar-item\"]}\r\n          >\r\n            {history.location.pathname.includes(\"subscribed\") ? (\r\n              <ViewColumnIcon className={Styles[\"sidebar-logo\"]} />\r\n            ) : (\r\n              <ViewColumnOutlinedIcon className={Styles[\"sidebar-logo\"]} />\r\n            )}\r\n            Subscribed Posts\r\n          </div>\r\n        </div>\r\n        <div className={Styles[\"sidebar-logout\"]}>\r\n          <div onClick={handleLogout} className={`${Styles[\"sidebar-item\"]}`}>\r\n            Logout\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { Button, CircularProgress } from \"@mui/material\";\r\nimport { Fragment } from \"react\";\r\nimport Styles from \"./LoadingButton.module.css\";\r\nlet LoadingButton = ({\r\n  type,\r\n  disabledText,\r\n  onClick,\r\n  className,\r\n  variant,\r\n  isLoading,\r\n  content,\r\n  disabled,\r\n  disabledClass,\r\n}: any) => {\r\n  return (\r\n    <Button\r\n      type={type}\r\n      disabled={isLoading || disabled}\r\n      variant={variant}\r\n      className={\r\n        disabled === false ? className : `${disabledClass} ${className}`\r\n      }\r\n      onClick={onClick}\r\n    >\r\n      {isLoading ? (\r\n        <Fragment>\r\n          <CircularProgress className={Styles[\"login-circular-indicator\"]} />\r\n        </Fragment>\r\n      ) : disabled ? (\r\n        disabledText ? (\r\n          disabledText\r\n        ) : (\r\n          content\r\n        )\r\n      ) : (\r\n        content\r\n      )}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default LoadingButton;\r\n","import { useState } from \"react\";\r\nimport { useAppSelector } from \"../../app/hooks\";\r\nimport Styles from \"./PostForm.module.css\";\r\nimport { useCreatePostMutation } from \"../../reducers/apiSlice\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport LoadingButton from \"../common/LoadingButton\";\r\n\r\nfunction stringToColor(string: string) {\r\n  let hash = 0;\r\n  let i;\r\n\r\n  /* eslint-disable no-bitwise */\r\n  for (i = 0; i < string.length; i += 1) {\r\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  let color = \"#\";\r\n\r\n  for (i = 0; i < 3; i += 1) {\r\n    const value = (hash >> (i * 8)) & 0xff;\r\n    color += `00${value.toString(16)}`.substr(-2);\r\n  }\r\n  /* eslint-enable no-bitwise */\r\n\r\n  return color;\r\n}\r\n\r\nexport function stringAvatar(name: string) {\r\n  return {\r\n    sx: {\r\n      bgcolor: stringToColor(name),\r\n    },\r\n    children: name[0].toUpperCase() + name[1],\r\n  };\r\n}\r\n\r\nconst PostForm = (): JSX.Element => {\r\n  const [post, setPost] = useState(\"\");\r\n  let username = useAppSelector((state) => state.auth.user);\r\n  const [image, setImage] = useState(\"\");\r\n  const [createPost, { isLoading }] = useCreatePostMutation();\r\n  const handleNewPost = async () => {\r\n    await createPost({ content: post, image }).unwrap();\r\n    //await makeNewPost(post, image);\r\n    // if (type === \"all\") dispatch(updateAllPosts());\r\n    // else if (type === \"subscribed\") dispatch(updateSubscribedPosts());\r\n  };\r\n  return (\r\n    <div className={Styles[\"post-form-outer-container\"]}>\r\n      <Avatar\r\n        className={Styles[\"post-form-avatar\"]}\r\n        {...stringAvatar(username)}\r\n      ></Avatar>\r\n      <div className={Styles[\"post-form-container\"]}>\r\n        <textarea\r\n          placeholder=\"Whats Happening?\"\r\n          className={Styles[\"post-text-area\"]}\r\n          onChange={(e) => setPost(e.target.value)}\r\n        ></textarea>\r\n        <div className={Styles[\"post-submit-container\"]}>\r\n          <input\r\n            onChange={(e) => setImage(e.target.value)}\r\n            className={Styles[\"post-image-input\"]}\r\n            type=\"text\"\r\n            placeholder=\"Image URL(optional)\"\r\n          ></input>\r\n          <LoadingButton\r\n            className={Styles[\"post-form-button\"]}\r\n            onClick={handleNewPost}\r\n            variant=\"contained\"\r\n            isLoading={isLoading}\r\n            content=\"Post\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","import { useState } from \"react\";\r\nimport { createComment } from \"../../services/postServices\";\r\nimport Styles from \"./PostComments.module.css\";\r\nimport postStyles from \"./Post.module.css\";\r\nimport { useHistory } from \"react-router\";\r\nconst PostComments = ({\r\n  comments,\r\n  post_id,\r\n  refreshCom,\r\n}: {\r\n  refreshCom: () => Promise<void>;\r\n  post_id: number;\r\n  comments: { screen_name: string; username: string; content: string }[];\r\n}): JSX.Element => {\r\n  const history = useHistory();\r\n  const [postContent, setPostContent] = useState(\"\");\r\n  const handleNewComment = async () => {\r\n    createComment(post_id, postContent);\r\n  };\r\n\r\n  const handleKeyPress = async (e: any) => {\r\n    if (e.which === 13) {\r\n      e.preventDefault();\r\n      await handleNewComment();\r\n      refreshCom();\r\n    }\r\n  };\r\n  return (\r\n    <div className={Styles[\"comments-container\"]}>\r\n      <div\r\n        onClick={(e) => e.stopPropagation()}\r\n        className={Styles[\"comments-input-container\"]}\r\n      >\r\n        <textarea\r\n          onKeyPress={handleKeyPress}\r\n          onChange={(e) => setPostContent(e.target.value)}\r\n          className={Styles[\"comments-input\"]}\r\n        ></textarea>\r\n      </div>\r\n\r\n      {comments.map((comment) => (\r\n        <div className={Styles[\"comments-comment\"]}>\r\n          <div\r\n            onClick={() => history.push(`/profile/${comment.username}`)}\r\n            className={postStyles[\"user-name-container\"]}\r\n          >\r\n            <div className={postStyles.screenname}>{comment.screen_name}</div>\r\n            <div className={postStyles.username}>@{comment.username}</div>\r\n          </div>\r\n          <p>{comment.content}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostComments;\r\n","import { useState } from \"react\";\r\nimport { getComments } from \"../../services/postServices\";\r\nimport Styles from \"./Post.module.css\";\r\nimport PostComments from \"./PostComments\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport CommentIcon from \"@mui/icons-material/Comment\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport { Modal } from \"@mui/material\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { stringAvatar } from \"./PostForm\";\r\nimport {\r\n  PostType,\r\n  useLikePostMutation,\r\n  useUnlikePostMutation,\r\n} from \"../../reducers/apiSlice\";\r\nimport { useHistory } from \"react-router\";\r\nconst months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\",\r\n];\r\n\r\nconst Post = ({ post }: { post: PostType }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [comments, setComments] = useState<\r\n    { screen_name: string; username: string; content: string }[]\r\n  >([]);\r\n  const history = useHistory();\r\n  const [likePost] = useLikePostMutation();\r\n  const [unlikePost] = useUnlikePostMutation();\r\n  const [comVis, setComVis] = useState(false);\r\n  const createdDate = new Date(\r\n    new Date(post.created_at).toLocaleString(\"en-US\", {\r\n      timeZone: \"America/Los_Angeles\",\r\n    })\r\n  );\r\n  const currentDate = new Date();\r\n  const timeDiff = Math.round(\r\n    Math.abs(createdDate.getTime() - currentDate.getTime()) / 36e5\r\n  );\r\n  //console.log(createdDate, currentDate, timeDiff);\r\n  const handleLike = (e: any) => {\r\n    e.stopPropagation();\r\n    likePost(post.post_id);\r\n\r\n    //dispatch(updateLikePost(post_id));\r\n  };\r\n\r\n  const handleDislike = (e: any) => {\r\n    e.stopPropagation();\r\n    unlikePost(post.post_id);\r\n  };\r\n\r\n  const refreshComments = async () => {\r\n    let coms = await getComments(post.post_id);\r\n    console.log(coms);\r\n    setComments(coms);\r\n  };\r\n  const toggleComments = async () => {\r\n    if (!comVis) refreshComments();\r\n    setComVis(!comVis);\r\n  };\r\n\r\n  const handleRedirectProfile = async () => {\r\n    history.push(`/profile/${post.username}`);\r\n  };\r\n  return (\r\n    <div onClick={toggleComments} className={Styles[\"post-outer-container\"]}>\r\n      <Avatar\r\n        className={Styles[\"post-avatar\"]}\r\n        {...stringAvatar(post.username)}\r\n      />\r\n      <div className={Styles[\"post-container\"]}>\r\n        <div>\r\n          <div className={Styles[\"post-header\"]}>\r\n            <div\r\n              onClick={handleRedirectProfile}\r\n              className={Styles[\"user-name-container\"]}\r\n            >\r\n              <div className={Styles.screenname}>{post.screen_name}</div>\r\n              <div className={Styles.username}>@{post.username}</div>\r\n              <div className={Styles.username}>\r\n                {timeDiff > 24\r\n                  ? `${months[createdDate.getMonth()]} ${createdDate.getDate()}`\r\n                  : `${timeDiff}h`}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p>{post.content}</p>\r\n          {post.image_url !== null && (\r\n            <img\r\n              onClick={() => setOpen(true)}\r\n              className={Styles[\"post-image\"]}\r\n              src={post.image_url}\r\n              alt={post.username}\r\n            ></img>\r\n          )}\r\n          <div className={Styles[\"post-footer\"]}>\r\n            <div className={Styles[\"comment-ind-container\"]}>\r\n              <CommentIcon></CommentIcon>\r\n              <span>{post.comment_count}</span>\r\n            </div>\r\n\r\n            <div\r\n              className={\r\n                post.liked\r\n                  ? Styles[\"material-icon-heart\"]\r\n                  : Styles[\"material-icon-border-heart\"]\r\n              }\r\n            >\r\n              {post.liked ? (\r\n                <FavoriteIcon onClick={handleDislike} />\r\n              ) : (\r\n                <FavoriteBorderIcon onClick={handleLike} />\r\n              )}\r\n              <span>{post.like_count}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {comVis && (\r\n          <PostComments\r\n            refreshCom={refreshComments}\r\n            post_id={post.post_id}\r\n            comments={comments}\r\n          ></PostComments>\r\n        )}\r\n        {post.image_url !== null && (\r\n          <Modal open={open} onClose={() => setOpen(false)}>\r\n            <img\r\n              className={Styles[\"modal-image\"]}\r\n              src={post.image_url}\r\n              alt={post.username}\r\n            ></img>\r\n          </Modal>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { PostType, useGetAllPostsQuery } from \"../../reducers/apiSlice\";\r\nimport Styles from \"./Feed.module.css\";\r\nimport PostForm from \"./PostForm\";\r\nimport Post from \"./Post\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nconst Feed = (): JSX.Element => {\r\n  //const feed = useAppSelector((state) => state.feed);\r\n  // const dispatch = useAppDispatch();\r\n  // const user = useAppSelector((state) => state.auth.user);\r\n  const { data: feed, isLoading, isSuccess } = useGetAllPostsQuery();\r\n\r\n  let content;\r\n  // useEffect(() => {\r\n  //   if (user !== \"\") {\r\n  //     if (type === \"all\") {\r\n  //       dispatch(updateAllPosts());\r\n  //     } else if (type === \"subscribed\") {\r\n  //       dispatch(updateSubscribedPosts());\r\n  //     }\r\n  //   }\r\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, [user, dispatch]);\r\n  if (isLoading)\r\n    content = (\r\n      <CircularProgress\r\n        className={Styles[\"loading-indicator\"]}\r\n      ></CircularProgress>\r\n    );\r\n  else if (isSuccess)\r\n    content = feed!.map((post: PostType, index: any) => (\r\n      <Post key={post.post_id} post={post}></Post>\r\n    ));\r\n  return (\r\n    <div className={Styles[\"feed-container\"]}>\r\n      <h3 className={Styles[\"feed-header\"]}>All</h3>\r\n      <PostForm></PostForm>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","import { Route, Redirect } from \"react-router\";\r\nimport { useAppSelector } from \"../../app/hooks\";\r\n\r\nconst AuthRoute = ({ children, ...rest }: any) => {\r\n  const loggedIn = useAppSelector((state) => state.auth.isLoggedIn);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        loggedIn ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthRoute;\r\n","import { login } from \"../../reducers/authSlice\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport LoadingButton from \"../common/LoadingButton\";\r\nimport { useHistory } from \"react-router\";\r\nimport Styles from \"./LoginPage.module.css\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useLoginMutation } from \"../../reducers/apiSlice\";\r\n\r\nconst LoginPage = (): JSX.Element => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  let [loginUser, { isSuccess, isLoading }] = useLoginMutation();\r\n  let loggedIn = useAppSelector((state) => state.auth.isLoggedIn);\r\n  let history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n\r\n  if (loggedIn) {\r\n    history.push(\"/all\");\r\n  }\r\n  const handleLogin = async (e: any) => {\r\n    e.preventDefault();\r\n    loginUser({ user: username, pass: password });\r\n    // const loginResult = await userLogin(username, password);\r\n    // if (loginResult.status === 202) {\r\n    //   dispatch(login({ user: username }));\r\n    //   history.push(\"/feed\");\r\n    // }\r\n  };\r\n\r\n  const handleTestLogin = async (e: any) => {\r\n    e.preventDefault();\r\n    setUsername(\"test\");\r\n    loginUser({ user: \"test\", pass: \"test\" });\r\n  };\r\n\r\n  const handleRegister = async (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/register\");\r\n  };\r\n\r\n  if (isSuccess) {\r\n    dispatch(login({ user: username }));\r\n    history.push(\"/feed\");\r\n  }\r\n\r\n  return (\r\n    <form className={Styles[\"login-form-container\"]}>\r\n      <label>\r\n        <b>Username</b>\r\n      </label>\r\n      <input\r\n        className={Styles[\"login-form-input\"]}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        placeholder=\"Username\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label>\r\n        <b>Password</b>\r\n      </label>\r\n      <input\r\n        className={Styles[\"login-form-input\"]}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        placeholder=\"Password\"\r\n        type=\"password\"\r\n      ></input>\r\n      <div className={Styles[\"login-button-container\"]}>\r\n        <LoadingButton\r\n          variant=\"outlined\"\r\n          className={`${Styles[\"login-form-button\"]}`}\r\n          onClick={handleLogin}\r\n          content=\"Log In\"\r\n          isLoading={isLoading}\r\n          disabled={username === \"\" || password === \"\"}\r\n        ></LoadingButton>\r\n        <Button\r\n          variant=\"outlined\"\r\n          className={Styles[\"login-form-button\"]}\r\n          onClick={handleRegister}\r\n        >\r\n          Sign Up\r\n        </Button>\r\n      </div>\r\n\r\n      <LoadingButton\r\n        variant=\"outlined\"\r\n        className={`${Styles[\"login-form-button\"]}`}\r\n        onClick={handleTestLogin}\r\n        content=\"Log Into Test Account\"\r\n        isLoading={isLoading}\r\n      ></LoadingButton>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import { useHistory } from \"react-router\";\r\nimport Styles from \"./Suggested.module.css\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport PostStyles from \"../Feed/Post.module.css\";\r\nimport { stringAvatar } from \"../Feed/PostForm\";\r\nimport LoadingButton from \"../common/LoadingButton\";\r\nimport { useFollowMutation } from \"../../reducers/apiSlice\";\r\n\r\nconst SuggestedUser = ({\r\n  user,\r\n  isLast,\r\n}: {\r\n  user: any;\r\n  isLast: any;\r\n}): JSX.Element => {\r\n  let [follow, { isLoading, isSuccess }] = useFollowMutation();\r\n  const history = useHistory();\r\n  const handleFollow = () => {\r\n    follow({ target: user.username });\r\n  };\r\n\r\n  const handleRedirectProfile = async () => {\r\n    history.push(`/profile/${user.username}`);\r\n  };\r\n  return (\r\n    <div\r\n      className={`${Styles[\"suggested-entry\"]} ${\r\n        isLast && Styles[\"last-element\"]\r\n      }`}\r\n    >\r\n      <div\r\n        onClick={handleRedirectProfile}\r\n        className={Styles[\"inner-container\"]}\r\n      >\r\n        <Avatar\r\n          className={Styles[\"suggested-avatar\"]}\r\n          {...stringAvatar(user.username)}\r\n        />\r\n        <div>\r\n          <div className={PostStyles.screenname}>{user.screen_name}</div>@\r\n          {user.username}\r\n        </div>\r\n      </div>\r\n      <LoadingButton\r\n        disabledClass={Styles[\"disabled-button\"]}\r\n        disabled={isSuccess || user.followed === true}\r\n        className={Styles[\"follow-button\"]}\r\n        onClick={handleFollow}\r\n        isLoading={isLoading}\r\n        variant=\"contained\"\r\n        content=\"Follow\"\r\n        disabledText=\"Followed\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuggestedUser;\r\n","import Styles from \"./Suggested.module.css\";\r\nimport SuggestedUser from \"./SuggestedUser\";\r\nimport { useGetSuggestedUsersQuery } from \"../../reducers/apiSlice\";\r\nconst Suggested = (): JSX.Element => {\r\n  const { data: users, isSuccess } = useGetSuggestedUsersQuery();\r\n  // useEffect(() => {\r\n  //   const popUsers = async () => {\r\n  //     let userList = await getSuggestedUsers();\r\n  //     // console.log(userList);\r\n  //     setUsers(userList);\r\n  //   };\r\n  //   popUsers();\r\n  // }, []);\r\n  return (\r\n    <div className={Styles[\"widget-container\"]}>\r\n      <h4 className={Styles[\"widget-title\"]}>Suggested Users</h4>\r\n      {isSuccess &&\r\n        users.map((user: any, index: any) => (\r\n          <SuggestedUser\r\n            isLast={index === users.length - 1}\r\n            key={user.username}\r\n            user={user}\r\n          ></SuggestedUser>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Suggested;\r\n","import Suggested from \"../SidebarWidgets/Suggested\";\r\nimport Styles from \"./SidebarRight.module.css\";\r\n\r\nconst SidebarRight = (): JSX.Element => {\r\n  return (\r\n    <div className={Styles[\"sidebar-container\"]}>\r\n      <Suggested />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarRight;\r\n","import Styles from \"./Profile.module.css\";\r\nimport { Avatar, CircularProgress } from \"@mui/material\";\r\nimport {\r\n  FUser,\r\n  useGetFollowerQuery,\r\n  useGetFollowingQuery,\r\n} from \"../../reducers/apiSlice\";\r\nimport Post from \"../Feed/Post\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { useHistory } from \"react-router\";\r\nimport SuggestedUser from \"../SidebarWidgets/SuggestedUser\";\r\n\r\nlet FollowInfo = (): JSX.Element => {\r\n  let history = useHistory();\r\n  let { username } = useParams<{ username: string }>();\r\n\r\n  const {\r\n    data: follower,\r\n    isLoading: isLoading1,\r\n    isSuccess: isSuccess1,\r\n    isFetching: isFetching1,\r\n  } = useGetFollowerQuery(username);\r\n\r\n  const {\r\n    data: following,\r\n    isLoading: isLoading2,\r\n    isSuccess: isSuccess2,\r\n    isFetching: isFetching2,\r\n  } = useGetFollowingQuery(username);\r\n\r\n  let handleFollowingClick = () => {\r\n    history.push(`/profile/${username}/following`);\r\n  };\r\n\r\n  let handleFollowerClick = () => {\r\n    history.push(`/profile/${username}/followers`);\r\n  };\r\n\r\n  let content;\r\n\r\n  let isFollowing = history.location.pathname.slice(-9).includes(\"following\");\r\n  let isFollower = history.location.pathname.slice(-9).includes(\"followers\");\r\n\r\n  if (isFollowing) {\r\n    if (isLoading2 || isFetching2) {\r\n      content = <CircularProgress className={Styles[\"loading-indicator\"]} />;\r\n    } else if (isSuccess2) {\r\n      content = following!.map((user: FUser, index: any) => (\r\n        <SuggestedUser isLast={false} key={user.username} user={user} />\r\n      ));\r\n    }\r\n  } else if (isFollower) {\r\n    if (isLoading1 || isFetching1) {\r\n      content = <CircularProgress className={Styles[\"loading-indicator\"]} />;\r\n    } else if (isSuccess1) {\r\n      content = follower!.map((user: FUser, index: any) => (\r\n        <SuggestedUser isLast={false} key={user.username} user={user} />\r\n      ));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={Styles[\"profile-container\"]}>\r\n      <div className={Styles[\"profile-header-container\"]}>\r\n        <ArrowBackIcon\r\n          onClick={() => history.goBack()}\r\n          className={Styles[\"back-arrow-icon\"]}\r\n        />\r\n      </div>\r\n      <div className={Styles[\"follower-page-button-container\"]}>\r\n        <div\r\n          onClick={handleFollowerClick}\r\n          className={Styles[\"follower-page-button-inner\"]}\r\n        >\r\n          <div className={Styles[\"follower-page-button\"]}>\r\n            {isFollower ? (\r\n              <>\r\n                <b>Followers</b>\r\n                <div className={Styles[\"follower-button-highlight\"]}></div>\r\n              </>\r\n            ) : (\r\n              \"Followers\"\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div\r\n          onClick={handleFollowingClick}\r\n          className={Styles[\"follower-page-button-inner\"]}\r\n        >\r\n          <div className={Styles[\"follower-page-button\"]}>\r\n            {isFollowing ? (\r\n              <>\r\n                <b>Following</b>\r\n                <div className={Styles[\"follower-button-highlight\"]}></div>\r\n              </>\r\n            ) : (\r\n              \"Following\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FollowInfo;\r\n","import { PostType, useGetSubPostsQuery } from \"../../reducers/apiSlice\";\r\nimport Styles from \"./Feed.module.css\";\r\nimport PostForm from \"./PostForm\";\r\nimport Post from \"./Post\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nconst SubFeed = (): JSX.Element => {\r\n  const { data: feed, isLoading, isSuccess } = useGetSubPostsQuery();\r\n\r\n  let content;\r\n\r\n  if (isLoading)\r\n    content = (\r\n      <CircularProgress\r\n        className={Styles[\"loading-indicator\"]}\r\n      ></CircularProgress>\r\n    );\r\n  else if (isSuccess)\r\n    content = feed!.map((post: PostType, index: any) => (\r\n      <Post post={post}></Post>\r\n    ));\r\n\r\n  return (\r\n    <div className={Styles[\"feed-container\"]}>\r\n      <h3 className={Styles[\"feed-header\"]}>Subscribed</h3>\r\n      <PostForm></PostForm>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubFeed;\r\n","import Styles from \"./Profile.module.css\";\r\nimport { Avatar, CircularProgress } from \"@mui/material\";\r\nimport {\r\n  PostType,\r\n  useGetUserPostsQuery,\r\n  useGetUserQuery,\r\n} from \"../../reducers/apiSlice\";\r\nimport Post from \"../Feed/Post\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { useHistory } from \"react-router\";\r\nlet Profile = (): JSX.Element => {\r\n  let history = useHistory();\r\n  let { username } = useParams<{ username: string }>();\r\n  const { data: user } = useGetUserQuery(username);\r\n  const {\r\n    data: posts,\r\n    isLoading,\r\n    isSuccess,\r\n    isFetching,\r\n  } = useGetUserPostsQuery(username);\r\n\r\n  let content;\r\n\r\n  if (isLoading || isFetching) {\r\n    content = <CircularProgress className={Styles[\"loading-indicator\"]} />;\r\n  } else if (isSuccess)\r\n    content = posts!.map((post: PostType, index: any) => (\r\n      <Post key={post.post_id} post={post}></Post>\r\n    ));\r\n\r\n  let handleFollowingClick = () => {\r\n    history.push(`/profile/${username}/following`);\r\n  };\r\n  let handleFollowerClick = () => {\r\n    history.push(`/profile/${username}/followers`);\r\n  };\r\n  return (\r\n    <div className={Styles[\"profile-container\"]}>\r\n      <div className={Styles[\"profile-header-container\"]}>\r\n        <ArrowBackIcon\r\n          onClick={() => history.goBack()}\r\n          className={Styles[\"back-arrow-icon\"]}\r\n        />\r\n      </div>\r\n      <div className={Styles[\"profile-image-container\"]}></div>\r\n      <div className={Styles[\"name-section\"]}>\r\n        <Avatar className={Styles[\"profile-avatar\"]} />\r\n        <h2>{user?.screen_name}</h2>\r\n        <div>@{user?.username}</div>\r\n        <div className={Styles[\"follow-section\"]}>\r\n          <span\r\n            onClick={handleFollowingClick}\r\n            className={Styles[\"follow-label-container\"]}\r\n          >\r\n            {user?.following_count}{\" \"}\r\n            <span className={Styles[\"follow-label\"]}>Following</span>\r\n          </span>\r\n          <span\r\n            onClick={handleFollowerClick}\r\n            className={Styles[\"follow-label-container\"]}\r\n          >\r\n            {user?.follower_count}{\" \"}\r\n            <span className={Styles[\"follow-label\"]}>Follower</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { login } from \"../../reducers/authSlice\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Styles from \"../LoginPage/LoginPage.module.css\";\r\nimport LoadingButton from \"../common/LoadingButton\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useLoginMutation, useRegisterMutation } from \"../../reducers/apiSlice\";\r\nconst Register = (): JSX.Element => {\r\n  const [screen_name, setScreenname] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  let [register, { isLoading, isSuccess }] = useRegisterMutation();\r\n  let [loginUser, { isLoading: loginLoading, isSuccess: loginSuccess }] =\r\n    useLoginMutation();\r\n  let loggedIn = useAppSelector((state) => state.auth.isLoggedIn);\r\n  let history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n\r\n  if (loggedIn) history.push(\"/all\");\r\n\r\n  const handleRegister = async (e: any) => {\r\n    e.preventDefault();\r\n    register({ user: username, pass: password, screen_name });\r\n    // const registerResult = await userRegister(username, password, screen_name);\r\n    // if (registerResult.status === 202) {\r\n    //   const loginResult = await userLogin(username, password);\r\n    //   if (loginResult.status === 202) {\r\n    //     dispatch(login({ user: username }));\r\n    //     history.push(\"/all\");\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      loginUser({ user: username, pass: password });\r\n    }\r\n  }, [isSuccess, loginUser, password, username]);\r\n\r\n  if (loginSuccess) {\r\n    dispatch(login({ user: username }));\r\n    history.push(\"/feed\");\r\n  }\r\n\r\n  return (\r\n    <form className={Styles[\"login-form-container\"]}>\r\n      <label>\r\n        <b>Screen Name</b>\r\n      </label>\r\n      <input\r\n        className={Styles[\"login-form-input\"]}\r\n        onChange={(e) => setScreenname(e.target.value)}\r\n        placeholder=\"Screen Name\"\r\n        type=\"text\"\r\n        required\r\n      ></input>\r\n      <label>\r\n        <b>Username</b>\r\n      </label>\r\n      <input\r\n        className={Styles[\"login-form-input\"]}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        placeholder=\"Username\"\r\n        type=\"text\"\r\n        required\r\n      ></input>\r\n      <label>\r\n        <b>Password</b>\r\n      </label>\r\n      <input\r\n        className={Styles[\"login-form-input\"]}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        placeholder=\"Password\"\r\n        type=\"password\"\r\n        required\r\n      ></input>\r\n      <div className={Styles[\"login-button-container\"]}>\r\n        <LoadingButton\r\n          type=\"submit\"\r\n          variant=\"outlined\"\r\n          className={Styles[\"login-form-input\"]}\r\n          onClick={handleRegister}\r\n          isLoading={isLoading || loginLoading}\r\n          content=\"Sign Up\"\r\n          disabled={username === \"\" || password === \"\" || screen_name === \"\"}\r\n        ></LoadingButton>\r\n        <Button\r\n          variant=\"outlined\"\r\n          className={Styles[\"login-form-input\"]}\r\n          onClick={() => history.push(\"/login\")}\r\n        >\r\n          Back to Login Page\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import Sidebar from \"./components/Sidebar/Sidebar\";\r\nimport Feed from \"./components/Feed/Feed\";\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\nimport AuthRoute from \"./components/AuthRoute/AuthRoute\";\r\nimport LoginPage from \"./components/LoginPage/LoginPage\";\r\nimport Styles from \"./app.module.css\";\r\nimport SidebarRight from \"./components/SidebarRight/SidebarRight\";\r\nimport FollowInfo from \"./components/Profile/FollowInfo\";\r\nimport SubFeed from \"./components/Feed/SubFeed\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport Register from \"./components/Register/Register\";\r\n\r\nconst App = (): JSX.Element => {\r\n  return (\r\n    <div className={Styles[\"app-container\"]}>\r\n      <Switch>\r\n        <Route path=\"/login\">\r\n          <LoginPage></LoginPage>\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          <Register></Register>\r\n        </Route>\r\n        <AuthRoute path=\"/all\">\r\n          <Sidebar />\r\n          <Feed></Feed>\r\n          <SidebarRight />\r\n        </AuthRoute>\r\n        <AuthRoute path=\"/subscribed\">\r\n          <Sidebar />\r\n          <SubFeed></SubFeed>\r\n          <SidebarRight />\r\n        </AuthRoute>\r\n        <AuthRoute path=\"/profile/:username/followers\">\r\n          <Sidebar />\r\n          <FollowInfo />\r\n          <SidebarRight />\r\n        </AuthRoute>\r\n        <AuthRoute path=\"/profile/:username/following\">\r\n          <Sidebar />\r\n          <FollowInfo />\r\n          <SidebarRight />\r\n        </AuthRoute>\r\n        <AuthRoute path=\"/profile/:username\">\r\n          <Sidebar />\r\n          <Profile />\r\n          <SidebarRight />\r\n        </AuthRoute>\r\n\r\n        <AuthRoute path=\"/\">\r\n          <Redirect to=\"/all\"></Redirect>\r\n        </AuthRoute>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport App from \"./app\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nlet persistor = persistStore(store);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <HashRouter basename=\"/message-board\">\n          <App></App>\n        </HashRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post-container\":\"Post_post-container__1eauk\",\"post-image\":\"Post_post-image__1eJ1c\",\"post-header\":\"Post_post-header__1RNuL\",\"material-icon-heart\":\"Post_material-icon-heart__2TuZ3\",\"material-icon-border-heart\":\"Post_material-icon-border-heart__Gei2f\",\"post-footer\":\"Post_post-footer__THcfM\",\"comment-ind-container\":\"Post_comment-ind-container__DWjBB\",\"modal-image\":\"Post_modal-image__1AGpc\",\"user-name-container\":\"Post_user-name-container__3UKS6\",\"screenname\":\"Post_screenname__fiKFS\",\"username\":\"Post_username__uDN1e\",\"post-avatar\":\"Post_post-avatar__1h6T7\",\"post-outer-container\":\"Post_post-outer-container__nvX_u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-form-container\":\"LoginPage_login-form-container__2uptE\",\"login-form-input\":\"LoginPage_login-form-input__10So9\",\"login-form-button\":\"LoginPage_login-form-button__3hphZ\",\"login-button-container\":\"LoginPage_login-button-container__ZrLNH\",\"login-circular-indicator\":\"LoginPage_login-circular-indicator__1_ruz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar-container\":\"Sidebar_sidebar-container__3ve-Y\",\"sidebar-outer-container\":\"Sidebar_sidebar-outer-container__UOMqw\",\"sidebar-logo-container\":\"Sidebar_sidebar-logo-container__3H_0c\",\"sidebar-logo\":\"Sidebar_sidebar-logo__2qQro\",\"sidebar-item\":\"Sidebar_sidebar-item__3tqF5\",\"sidebar-logout\":\"Sidebar_sidebar-logout__29fYi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"widget-container\":\"Suggested_widget-container__3P3du\",\"widget-title\":\"Suggested_widget-title__16gt1\",\"last-element\":\"Suggested_last-element__WHV-L\",\"suggested-entry\":\"Suggested_suggested-entry__1F6jb\",\"suggested-avatar\":\"Suggested_suggested-avatar__3wfD7\",\"inner-container\":\"Suggested_inner-container__qD884\",\"follow-button\":\"Suggested_follow-button__3D-HD\",\"disabled-button\":\"Suggested_disabled-button__1W885\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed-container\":\"Feed_feed-container__24Wie\",\"feed-header\":\"Feed_feed-header__3uiu4\",\"loading-indicator\":\"Feed_loading-indicator__XqhjX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post-text-area\":\"PostForm_post-text-area__2tqHQ\",\"post-form-container\":\"PostForm_post-form-container__2adad\",\"post-form-outer-container\":\"PostForm_post-form-outer-container__21ASL\",\"post-form-avatar\":\"PostForm_post-form-avatar__qfdX1\",\"post-submit-container\":\"PostForm_post-submit-container__2C7HZ\",\"post-image-input\":\"PostForm_post-image-input__3-g9l\",\"post-form-button\":\"PostForm_post-form-button__27-oG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments-container\":\"PostComments_comments-container__3uFEf\",\"comments-input-container\":\"PostComments_comments-input-container__3dFH5\",\"comments-input\":\"PostComments_comments-input__ow6cX\",\"comments-comment\":\"PostComments_comments-comment__1wGZk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-circular-indicator\":\"LoadingButton_login-circular-indicator__1elvg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-container\":\"app_app-container__25y9D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar-container\":\"SidebarRight_sidebar-container__1zSIq\"};"],"sourceRoot":""}