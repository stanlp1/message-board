{"version":3,"sources":["reducers/authSlice.tsx","services/postServices.js","reducers/feedSlice.tsx","app/store.ts","app/hooks.ts","services/accountServices.js","components/Sidebar/Sidebar.tsx","components/Feed/PostForm.tsx","components/Feed/PostComments.tsx","components/Feed/Post.tsx","components/Feed/Feed.tsx","components/AuthRoute/AuthRoute.tsx","components/LoginPage/LoginPage.tsx","services/userServices.js","components/SidebarWidgets/SuggestedUser.tsx","components/SidebarWidgets/Suggested.tsx","components/SidebarRight/SidebarRight.tsx","app.tsx","index.tsx","components/Feed/Post.module.css","components/Sidebar/Sidebar.module.css","components/LoginPage/LoginPage.module.css","components/Feed/PostForm.module.css","components/Feed/PostComments.module.css","components/SidebarWidgets/Suggested.module.css","components/Feed/Feed.module.css","app.module.css","components/SidebarRight/SidebarRight.module.css"],"names":["authSlice","createSlice","name","initialState","isLoggedIn","user","reducers","login","state","action","payload","logout","actions","baseURL","headersList","getAllSubscribedPosts","a","fetch","method","headers","credentials","res","json","jsonRes","getAllPosts","mode","makeNewPost","content","image","body","JSON","stringify","likePost","post_id","unlikePost","createComment","getComments","url","feedSlice","addPostToTop","setPosts","posts","clearFeed","feedLikePost","map","post","liked","like_count","feedUnlikePost","updateAllPosts","dispatch","getState","then","updateSubscribedPosts","persistConfig","key","storage","whitelist","combineReducers","auth","feed","persistedReducer","persistReducer","store","configureStore","reducer","useAppDispatch","useDispatch","useAppSelector","useSelector","userLogin","pass","result","userRegister","userLogout","Sidebar","history","useHistory","handleNavClick","e","option","target","id","push","handleLogout","className","Styles","style","fontSize","onClick","PostForm","type","useState","setPost","setImage","handleNewPost","onChange","value","placeholder","Button","variant","PostComments","comments","refreshCom","postContent","setPostContent","handleNewComment","handleKeyPress","which","preventDefault","onKeyPress","comment","username","months","Post","created_at","image_url","comment_count","open","setOpen","setComments","comVis","setComVis","createdDate","Date","currentDate","timeDiff","Math","round","abs","getTime","refreshComments","coms","console","log","toggleComments","getMonth","getDay","src","alt","stopPropagation","updateUnlikePost","updateLikePost","Modal","onClose","Feed","useEffect","length","index","AuthRoute","children","rest","loggedIn","render","location","to","pathname","from","LoginPage","setUsername","password","setPassword","handleLogin","status","handleRegister","alert","getSuggestedUsers","followUser","SuggestedUser","Suggested","users","setUsers","popUsers","userList","SidebarRight","App","path","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f4e12d95.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    isLoggedIn: false,\r\n    user: \"\",\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.isLoggedIn = true;\r\n      state.user = action.payload.user;\r\n    },\r\n    logout: (state) => {\r\n      state.isLoggedIn = false;\r\n      state.user = \"\";\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n","export const baseURL = \"https://safe-wave-92099.herokuapp.com\";\r\nexport let headersList = {\r\n  \"Content-Type\": \"application/json\",\r\n};\r\n\r\nconst getAllUserPosts = async () => {\r\n  const url = baseURL + \"/posts/getUserPosts\";\r\n  let res = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n  });\r\n  let jsonRes = await res.json();\r\n  // console.log(jsonRes);\r\n  return jsonRes;\r\n};\r\n\r\nconst getAllSubscribedPosts = async () => {\r\n  const url = baseURL + \"/posts/getSubscribedPosts\";\r\n  let res = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n  });\r\n  let jsonRes = await res.json();\r\n  return jsonRes;\r\n};\r\n\r\nconst getAllPosts = async () => {\r\n  const url = baseURL + \"/posts/getAllPosts\";\r\n  let res = await fetch(url, {\r\n    mode: \"cors\",\r\n    method: \"GET\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n  });\r\n  let jsonRes = await res.json();\r\n  // console.log(jsonRes);\r\n  return jsonRes;\r\n};\r\nconst makeNewPost = async (content, image) => {\r\n  const url = baseURL + \"/posts/new\";\r\n  let body = {\r\n    content,\r\n    image,\r\n  };\r\n  let res = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n    body: JSON.stringify(body),\r\n  });\r\n  return res;\r\n};\r\n\r\nconst likePost = async (post_id) => {\r\n  const url = baseURL + \"/posts/likePost\";\r\n  let body = {\r\n    post_id,\r\n  };\r\n  let res = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n    body: JSON.stringify(body),\r\n  });\r\n  return res;\r\n};\r\n\r\nconst unlikePost = async (post_id) => {\r\n  const url = baseURL + \"/posts/unlikePost\";\r\n  let body = {\r\n    post_id,\r\n  };\r\n  let res = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n    body: JSON.stringify(body),\r\n  });\r\n  return res;\r\n};\r\n\r\nconst createComment = async (post_id, content) => {\r\n  const url = baseURL + \"/posts/createComment\";\r\n  let body = {\r\n    post_id,\r\n    content,\r\n  };\r\n  let res = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n    body: JSON.stringify(body),\r\n  });\r\n  return res;\r\n};\r\n\r\nconst getComments = async (post_id) => {\r\n  const url = baseURL + `/posts/${post_id}/comments`;\r\n  let res = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n  });\r\n  return await res.json();\r\n};\r\nexport {\r\n  getAllUserPosts,\r\n  makeNewPost,\r\n  getAllSubscribedPosts,\r\n  getAllPosts,\r\n  likePost,\r\n  getComments,\r\n  createComment,\r\n  unlikePost,\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  getAllPosts,\r\n  getAllSubscribedPosts,\r\n  likePost,\r\n  unlikePost,\r\n} from \"../services/postServices\";\r\n\r\ntype feedSliceState = {\r\n  content: string;\r\n  username: string;\r\n  created_at: string;\r\n  liked: boolean;\r\n  post_id: number;\r\n  image_url: string;\r\n  like_count: number;\r\n  comment_count: number;\r\n}[];\r\nconst initialState: feedSliceState = [];\r\n\r\nlet feedSlice = createSlice({\r\n  name: \"feed\",\r\n  initialState,\r\n  reducers: {\r\n    addPostToTop: (state, action) => {\r\n      return [action.payload, ...state];\r\n    },\r\n    setPosts: (state, action) => {\r\n      return action.payload.posts;\r\n    },\r\n    clearFeed: (state) => {\r\n      return [];\r\n    },\r\n    feedLikePost: (state, action) => {\r\n      return state.map((post) =>\r\n        post.post_id === action.payload.post_id\r\n          ? { ...post, liked: true, like_count: post.like_count + 1 }\r\n          : post\r\n      );\r\n    },\r\n    feedUnlikePost: (state, action) => {\r\n      return state.map((post) =>\r\n        post.post_id === action.payload.post_id\r\n          ? { ...post, liked: false, like_count: post.like_count - 1 }\r\n          : post\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const updateAllPosts = () => {\r\n  return (dispatch: any, getState: any) => {\r\n    getAllPosts().then((posts) => {\r\n      dispatch(setPosts({ posts }));\r\n      // console.log(posts);\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateSubscribedPosts = () => {\r\n  return (dispatch: any, getState: any) => {\r\n    getAllSubscribedPosts().then((posts) => {\r\n      dispatch(setPosts({ posts }));\r\n      // console.log(posts);\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateLikePost = (post_id: number) => {\r\n  return (dispatch: any, getState: any) => {\r\n    likePost(post_id);\r\n    dispatch(feedLikePost({ post_id }));\r\n  };\r\n};\r\n\r\nexport const updateUnlikePost = (post_id: number) => {\r\n  return (dispatch: any, getState: any) => {\r\n    unlikePost(post_id);\r\n    dispatch(feedUnlikePost({ post_id }));\r\n  };\r\n};\r\nexport const {\r\n  addPostToTop,\r\n  setPosts,\r\n  clearFeed,\r\n  feedLikePost,\r\n  feedUnlikePost,\r\n} = feedSlice.actions;\r\nexport default feedSlice.reducer;\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport authSlice from \"../reducers/authSlice\";\nimport feedSlice from \"../reducers/feedSlice\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"auth\"],\n};\n\nconst reducers = combineReducers({ auth: authSlice, feed: feedSlice });\nconst persistedReducer = persistReducer(persistConfig, reducers);\nexport const store = configureStore({ reducer: persistedReducer });\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { baseURL, headersList } from \"./postServices\";\r\n\r\nlet userLogin = async (user, pass) => {\r\n  let url = baseURL + \"/account/login\";\r\n  let body = {\r\n    user,\r\n    pass,\r\n  };\r\n  const result = await fetch(url, {\r\n    credentials: \"include\",\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    body: JSON.stringify(body),\r\n  });\r\n  // console.log(result);\r\n  return result;\r\n};\r\n\r\nlet userRegister = async (user, pass) => {\r\n  let url = baseURL + \"/account/register\";\r\n  let body = {\r\n    user,\r\n    pass,\r\n  };\r\n  const result = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    body: JSON.stringify(body),\r\n  });\r\n  return result;\r\n};\r\n\r\nlet userLogout = async () => {\r\n  let url = baseURL + \"/account/logout\";\r\n  const result = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n  });\r\n  return result;\r\n};\r\nexport { userRegister, userLogin, userLogout };\r\n","import React from \"react\";\r\nimport Styles from \"./Sidebar.module.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useAppDispatch } from \"../../app/hooks\";\r\nimport {\r\n  updateAllPosts,\r\n  updateSubscribedPosts,\r\n} from \"../../reducers/feedSlice\";\r\nimport { userLogout } from \"../../services/accountServices\";\r\nimport { logout } from \"../../reducers/authSlice\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\n\r\nconst Sidebar = (): JSX.Element => {\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n  const handleNavClick = async (e: any) => {\r\n    let option = e.target.id;\r\n    if (option === \"/all\") {\r\n      dispatch(updateAllPosts());\r\n    } else if (option === \"/subscribed\") {\r\n      dispatch(updateSubscribedPosts());\r\n    }\r\n    history.push(option);\r\n  };\r\n\r\n  const handleLogout = async (e: any) => {\r\n    await userLogout();\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <div className={Styles[\"sidebar-container\"]}>\r\n      <div className={Styles[\"sidebar-logo\"]}>\r\n        <TwitterIcon style={{ fontSize: \"40px\" }} />\r\n      </div>\r\n\r\n      {/* <div\r\n        onClick={handleNavClick}\r\n        id=\"/profile\"\r\n        className={Styles[\"sidebar-item\"]}\r\n      >\r\n        Profile\r\n      </div> */}\r\n      <div\r\n        onClick={handleNavClick}\r\n        id=\"/all\"\r\n        className={Styles[\"sidebar-item\"]}\r\n      >\r\n        All Posts\r\n      </div>\r\n      <div\r\n        onClick={handleNavClick}\r\n        id=\"/subscribed\"\r\n        className={Styles[\"sidebar-item\"]}\r\n      >\r\n        Subscribed Posts\r\n      </div>\r\n      <div\r\n        onClick={handleLogout}\r\n        className={`${Styles[\"sidebar-item\"]} ${Styles[\"sidebar-logout\"]}`}\r\n      >\r\n        Logout\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { useState } from \"react\";\r\nimport { useAppDispatch } from \"../../app/hooks\";\r\nimport {\r\n  updateAllPosts,\r\n  updateSubscribedPosts,\r\n} from \"../../reducers/feedSlice\";\r\nimport { makeNewPost } from \"../../services/postServices\";\r\nimport Styles from \"./PostForm.module.css\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst PostForm = ({ type }: { type: String }): JSX.Element => {\r\n  const [post, setPost] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const dispatch = useAppDispatch();\r\n  const handleNewPost = async () => {\r\n    await makeNewPost(post, image);\r\n    if (type === \"all\") dispatch(updateAllPosts());\r\n    else if (type === \"subscribed\") dispatch(updateSubscribedPosts());\r\n  };\r\n  return (\r\n    <div className={Styles[\"post-form-container\"]}>\r\n      <textarea\r\n        className={Styles[\"post-text-area\"]}\r\n        onChange={(e) => setPost(e.target.value)}\r\n      ></textarea>\r\n      <div className={Styles[\"post-submit-container\"]}>\r\n        <input\r\n          onChange={(e) => setImage(e.target.value)}\r\n          className={Styles[\"post-image-input\"]}\r\n          type=\"text\"\r\n          placeholder=\"Image URL(optional)\"\r\n        ></input>\r\n        <Button\r\n          className={Styles[\"post-form-button\"]}\r\n          onClick={handleNewPost}\r\n          variant=\"contained\"\r\n        >\r\n          Post\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","import { useState } from \"react\";\r\nimport { createComment } from \"../../services/postServices\";\r\nimport Styles from \"./PostComments.module.css\";\r\n\r\nconst PostComments = ({\r\n  comments,\r\n  post_id,\r\n  refreshCom,\r\n}: {\r\n  refreshCom: () => Promise<void>;\r\n  post_id: number;\r\n  comments: { username: string; content: string }[];\r\n}): JSX.Element => {\r\n  const [postContent, setPostContent] = useState(\"\");\r\n  const handleNewComment = async () => {\r\n    createComment(post_id, postContent);\r\n  };\r\n\r\n  const handleKeyPress = async (e: any) => {\r\n    if (e.which === 13) {\r\n      e.preventDefault();\r\n      await handleNewComment();\r\n      refreshCom();\r\n    }\r\n  };\r\n  return (\r\n    <div className={Styles[\"comments-container\"]}>\r\n      <div className={Styles[\"comments-input-container\"]}>\r\n        <textarea\r\n          onKeyPress={handleKeyPress}\r\n          onChange={(e) => setPostContent(e.target.value)}\r\n          className={Styles[\"comments-input\"]}\r\n        ></textarea>\r\n      </div>\r\n\r\n      {comments.map((comment) => (\r\n        <div className={Styles[\"comments-comment\"]}>\r\n          {comment.username}\r\n          <p>{comment.content}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostComments;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getComments } from \"../../services/postServices\";\r\nimport { useAppDispatch } from \"../../app/hooks\";\r\nimport Styles from \"./Post.module.css\";\r\nimport PostComments from \"./PostComments\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport CommentIcon from \"@mui/icons-material/Comment\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport { updateLikePost, updateUnlikePost } from \"../../reducers/feedSlice\";\r\nimport { Modal } from \"@mui/material\";\r\nconst months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\",\r\n];\r\n\r\nconst Post = ({\r\n  post_id,\r\n  content,\r\n  username,\r\n  created_at,\r\n  liked,\r\n  image_url,\r\n  like_count,\r\n  comment_count,\r\n}: {\r\n  post_id: number;\r\n  content: string;\r\n  username: string;\r\n  created_at: string;\r\n  liked: boolean;\r\n  image_url: string;\r\n  like_count: number;\r\n  comment_count: number;\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [comments, setComments] = useState<\r\n    { username: string; content: string }[]\r\n  >([]);\r\n  const [comVis, setComVis] = useState(false);\r\n  const dispatch = useAppDispatch();\r\n  const createdDate = new Date(created_at);\r\n  const currentDate = new Date();\r\n  const timeDiff = Math.round(\r\n    Math.abs(createdDate.getTime() - currentDate.getTime()) / 36e5\r\n  );\r\n  const handleLike = (e: any) => {\r\n    e.stopPropagation();\r\n    dispatch(updateLikePost(post_id));\r\n  };\r\n\r\n  const handleDislike = (e: any) => {\r\n    e.stopPropagation();\r\n    dispatch(updateUnlikePost(post_id));\r\n  };\r\n\r\n  const refreshComments = async () => {\r\n    let coms = await getComments(post_id);\r\n    console.log(coms);\r\n    setComments(coms);\r\n  };\r\n  const toggleComments = async () => {\r\n    if (!comVis) refreshComments();\r\n    setComVis(!comVis);\r\n  };\r\n\r\n  return (\r\n    <div className={Styles[\"post-container\"]}>\r\n      <div onClick={toggleComments}>\r\n        <div className={Styles[\"post-header\"]}>\r\n          <p>{username}</p>\r\n          <p>\r\n            {timeDiff > 24\r\n              ? `${months[createdDate.getMonth()]} ${createdDate.getDay()}`\r\n              : `${timeDiff}h ago`}\r\n          </p>\r\n        </div>\r\n        <p>{content}</p>\r\n        {image_url !== null && (\r\n          <img\r\n            onClick={() => setOpen(true)}\r\n            className={Styles[\"post-image\"]}\r\n            src={image_url}\r\n            alt={username}\r\n          ></img>\r\n        )}\r\n        <div className={Styles[\"post-footer\"]}>\r\n          <div className={Styles[\"comment-ind-container\"]}>\r\n            <CommentIcon></CommentIcon>\r\n            <span>{comment_count}</span>\r\n          </div>\r\n\r\n          <div\r\n            className={\r\n              liked\r\n                ? Styles[\"material-icon-heart\"]\r\n                : Styles[\"material-icon-border-heart\"]\r\n            }\r\n          >\r\n            {liked ? (\r\n              <FavoriteIcon onClick={handleDislike} />\r\n            ) : (\r\n              <FavoriteBorderIcon onClick={handleLike} />\r\n            )}\r\n            <span>{like_count}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {comVis && (\r\n        <PostComments\r\n          refreshCom={refreshComments}\r\n          post_id={post_id}\r\n          comments={comments}\r\n        ></PostComments>\r\n      )}\r\n      {image_url !== null && (\r\n        <Modal open={open} onClose={() => setOpen(false)}>\r\n          <img\r\n            className={Styles[\"modal-image\"]}\r\n            src={image_url}\r\n            alt={username}\r\n          ></img>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { useEffect } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport {\r\n  updateAllPosts,\r\n  updateSubscribedPosts,\r\n} from \"../../reducers/feedSlice\";\r\nimport Styles from \"./Feed.module.css\";\r\nimport PostForm from \"./PostForm\";\r\nimport Post from \"./Post\";\r\n\r\nconst Feed = ({ type }: { type: String }): JSX.Element => {\r\n  const feed = useAppSelector((state) => state.feed);\r\n  const dispatch = useAppDispatch();\r\n  const user = useAppSelector((state) => state.auth.user);\r\n\r\n  useEffect(() => {\r\n    if (user !== \"\") {\r\n      if (type === \"all\") {\r\n        dispatch(updateAllPosts());\r\n      } else if (type === \"subscribed\") {\r\n        dispatch(updateSubscribedPosts());\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user, dispatch]);\r\n\r\n  return (\r\n    <div className={Styles[\"feed-container\"]}>\r\n      <h3 className={Styles[\"feed-header\"]}>Home</h3>\r\n      <PostForm type={type}></PostForm>\r\n      {feed.length !== 0 ? (\r\n        <div>\r\n          {\" \"}\r\n          {feed.map((post, index) => (\r\n            <Post\r\n              post_id={post.post_id}\r\n              key={index}\r\n              content={post.content}\r\n              username={post.username}\r\n              created_at={post.created_at}\r\n              liked={post.liked}\r\n              image_url={post.image_url}\r\n              like_count={post.like_count}\r\n              comment_count={post.comment_count}\r\n            ></Post>\r\n          ))}{\" \"}\r\n        </div>\r\n      ) : (\r\n        \"No Posts\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","import { Route, Redirect } from \"react-router\";\r\nimport { useAppSelector } from \"../../app/hooks\";\r\n\r\nconst AuthRoute = ({ children, ...rest }: any) => {\r\n  const loggedIn = useAppSelector((state) => state.auth.isLoggedIn);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        loggedIn ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthRoute;\r\n","import { login } from \"../../reducers/authSlice\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch } from \"../../app/hooks\";\r\nimport { userLogin, userRegister } from \"../../services/accountServices\";\r\nimport { useHistory } from \"react-router\";\r\nimport Styles from \"./LoginPage.module.css\";\r\n\r\nconst LoginPage = (): JSX.Element => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  let history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleLogin = async (e: any) => {\r\n    e.preventDefault();\r\n    const loginResult = await userLogin(username, password);\r\n    if (loginResult.status === 202) {\r\n      dispatch(login({ user: username }));\r\n      history.push(\"/feed\");\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (e: any) => {\r\n    e.preventDefault();\r\n    const registerResult = await userRegister(username, password);\r\n    if (registerResult.status === 202) {\r\n      alert(\"Please log in\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={Styles[\"login-form-container\"]}>\r\n      <label>\r\n        <b>Username</b>\r\n      </label>\r\n      <input\r\n        className={Styles[\"login-form-input\"]}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        placeholder=\"Username\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label>\r\n        <b>Password</b>\r\n      </label>\r\n      <input\r\n        className={Styles[\"login-form-input\"]}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        placeholder=\"Password\"\r\n        type=\"password\"\r\n      ></input>\r\n      <button\r\n        className={`${Styles[\"login-form-input\"]} ${Styles[\"login-form-button\"]}`}\r\n        onClick={handleLogin}\r\n      >\r\n        Submit\r\n      </button>\r\n      <button className={Styles[\"login-form-input\"]} onClick={handleRegister}>\r\n        Sign Up\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import { baseURL, headersList } from \"./postServices\";\r\n\r\nconst getSuggestedUsers = async () => {\r\n  const url = baseURL + \"/user/suggestedUsers\";\r\n  let res = await fetch(url, {\r\n    type: \"cors\",\r\n    method: \"GET\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n  });\r\n  let jsonRes = await res.json();\r\n  // console.log(jsonRes);\r\n  return jsonRes;\r\n};\r\n\r\nconst followUser = async (target) => {\r\n  const url = baseURL + \"/user/followUser\";\r\n  const body = {\r\n    target: target,\r\n  };\r\n  let res = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n    body: JSON.stringify(body),\r\n  });\r\n  let jsonRes = await res.json();\r\n  return jsonRes;\r\n};\r\n\r\nexport { getSuggestedUsers, followUser };\r\n","import { followUser } from \"../../services/userServices\";\r\nimport Styles from \"./Suggested.module.css\";\r\n\r\nconst SuggestedUser = ({ username }: { username: string }): JSX.Element => {\r\n  const handleFollow = () => {\r\n    followUser(username);\r\n  };\r\n  return (\r\n    <div className={Styles[\"suggested-entry\"]}>\r\n      {username}\r\n      <button onClick={handleFollow}>Follow</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuggestedUser;\r\n","import Styles from \"./Suggested.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getSuggestedUsers } from \"../../services/userServices\";\r\nimport SuggestedUser from \"./SuggestedUser\";\r\nconst Suggested = (): JSX.Element => {\r\n  const [users, setUsers] = useState<{ username: string }[]>([]);\r\n\r\n  useEffect(() => {\r\n    const popUsers = async () => {\r\n      let userList = await getSuggestedUsers();\r\n      // console.log(userList);\r\n      setUsers(userList);\r\n    };\r\n    popUsers();\r\n  }, []);\r\n  return (\r\n    <div className={Styles[\"widget-container\"]}>\r\n      <h5>Suggested Users</h5>\r\n      {users.map((user, index) => (\r\n        <SuggestedUser\r\n          key={user.username}\r\n          username={user.username}\r\n        ></SuggestedUser>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Suggested;\r\n","import Suggested from \"../SidebarWidgets/Suggested\";\r\nimport Styles from \"./SidebarRight.module.css\";\r\n\r\nconst SidebarRight = (): JSX.Element => {\r\n  return (\r\n    <div className={Styles[\"sidebar-container\"]}>\r\n      <Suggested />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarRight;\r\n","import Sidebar from \"./components/Sidebar/Sidebar\";\r\nimport Feed from \"./components/Feed/Feed\";\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\nimport AuthRoute from \"./components/AuthRoute/AuthRoute\";\r\nimport LoginPage from \"./components/LoginPage/LoginPage\";\r\nimport Styles from \"./app.module.css\";\r\nimport SidebarRight from \"./components/SidebarRight/SidebarRight\";\r\n\r\nconst App = (): JSX.Element => {\r\n  return (\r\n    <div className={Styles[\"app-container\"]}>\r\n      <Switch>\r\n        <Route path=\"/login\">\r\n          <LoginPage></LoginPage>\r\n        </Route>\r\n        <AuthRoute path=\"/all\">\r\n          <Sidebar />\r\n          <Feed type=\"all\"></Feed>\r\n          <SidebarRight />\r\n        </AuthRoute>\r\n        <AuthRoute path=\"/subscribed\">\r\n          <Sidebar />\r\n          <Feed type=\"subscribed\"></Feed>\r\n          <SidebarRight />\r\n        </AuthRoute>\r\n        <AuthRoute path=\"/\">\r\n          <Redirect to=\"/all\"></Redirect>\r\n        </AuthRoute>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport App from \"./app\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nlet persistor = persistStore(store);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App></App>\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post-container\":\"Post_post-container__1eauk\",\"post-image\":\"Post_post-image__1eJ1c\",\"post-header\":\"Post_post-header__1RNuL\",\"material-icon-heart\":\"Post_material-icon-heart__2TuZ3\",\"material-icon-border-heart\":\"Post_material-icon-border-heart__Gei2f\",\"post-footer\":\"Post_post-footer__THcfM\",\"comment-ind-container\":\"Post_comment-ind-container__DWjBB\",\"modal-image\":\"Post_modal-image__1AGpc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar-container\":\"Sidebar_sidebar-container__3ve-Y\",\"sidebar-logo\":\"Sidebar_sidebar-logo__2qQro\",\"sidebar-item\":\"Sidebar_sidebar-item__3tqF5\",\"sidebar-logout\":\"Sidebar_sidebar-logout__29fYi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-form-container\":\"LoginPage_login-form-container__2uptE\",\"login-form-input\":\"LoginPage_login-form-input__10So9\",\"login-form-button\":\"LoginPage_login-form-button__3hphZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post-text-area\":\"PostForm_post-text-area__2tqHQ\",\"post-form-container\":\"PostForm_post-form-container__2adad\",\"post-submit-container\":\"PostForm_post-submit-container__2C7HZ\",\"post-image-input\":\"PostForm_post-image-input__3-g9l\",\"post-form-button\":\"PostForm_post-form-button__27-oG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments-container\":\"PostComments_comments-container__3uFEf\",\"comments-input-container\":\"PostComments_comments-input-container__3dFH5\",\"comments-input\":\"PostComments_comments-input__ow6cX\",\"comments-comment\":\"PostComments_comments-comment__1wGZk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"widget-container\":\"Suggested_widget-container__3P3du\",\"suggested-entry\":\"Suggested_suggested-entry__1F6jb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed-container\":\"Feed_feed-container__24Wie\",\"feed-header\":\"Feed_feed-header__3uiu4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-container\":\"app_app-container__25y9D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar-container\":\"SidebarRight_sidebar-container__1zSIq\"};"],"sourceRoot":""}