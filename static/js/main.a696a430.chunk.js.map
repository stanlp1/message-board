{"version":3,"sources":["app.module.css","components/SidebarRight/SidebarRight.module.css","components/Feed/Post.module.css","reducers/authSlice.tsx","reducers/apiSlice.tsx","app/store.ts","app/hooks.ts","services/userServices.js","services/accountServices.js","components/Sidebar/Sidebar.tsx","components/common/LoadingButton.tsx","components/Feed/PostForm.tsx","components/Feed/PostComments.tsx","components/Feed/Post.tsx","components/Feed/Feed.tsx","components/AuthRoute/AuthRoute.tsx","components/LoginPage/LoginPage.tsx","components/SidebarWidgets/SuggestedUser.tsx","components/SidebarWidgets/Suggested.tsx","components/SidebarRight/SidebarRight.tsx","components/Profile/FollowInfo.tsx","components/Feed/SubFeed.tsx","components/Profile/Profile.tsx","components/Register/Register.tsx","app.tsx","index.tsx","components/Profile/Profile.module.css","components/Sidebar/Sidebar.module.css","components/LoginPage/LoginPage.module.css","components/SidebarWidgets/Suggested.module.css","components/Feed/PostForm.module.css","components/Feed/Feed.module.css","components/Feed/PostComments.module.css","components/common/LoadingButton.module.css"],"names":["module","exports","authSlice","createSlice","name","initialState","isLoggedIn","user","reducers","login","state","action","payload","logout","actions","apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","credentials","tagTypes","endpoints","builder","getComments","query","post_id","providesTags","result","error","arg","type","id","getFollower","username","getFollowing","getUser","getUserPosts","getAllPosts","getSuggestedUsers","getSubPosts","createComment","mutation","body","url","method","onQueryStarted","dispatch","queryFulfilled","util","updateQueryData","undefined","posts","console","log","forEach","post","comment_count","invalidatesTags","follow","register","createPost","postContent","likePost","like_count","liked","e","unlikePost","useGetAllPostsQuery","useGetSubPostsQuery","useCreatePostMutation","useLikePostMutation","useUnlikePostMutation","useGetUserQuery","useGetUserPostsQuery","useLoginMutation","useRegisterMutation","useGetSuggestedUsersQuery","useFollowMutation","useGetFollowerQuery","useGetFollowingQuery","useGetCommentsQuery","useCreateCommentMutation","persistConfig","key","storage","whitelist","combineReducers","auth","reducer","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","concat","useAppDispatch","useDispatch","useAppSelector","useSelector","baseURL","headersList","userLogout","a","fetch","headers","Sidebar","history","useHistory","handleNavClick","option","currentTarget","initiate","subscribe","forceRefetch","push","handleLogout","className","Styles","onClick","location","pathname","includes","href","LoadingButton","disabledText","variant","isLoading","content","disabled","disabledClass","Button","CircularProgress","stringToColor","string","i","hash","length","charCodeAt","color","toString","substr","stringAvatar","sx","bgcolor","children","toUpperCase","PostForm","useState","setPost","image","setImage","handleNewPost","unwrap","Avatar","placeholder","onChange","target","value","PostComments","comments","refreshCom","setPostContent","handleNewComment","handleKeyPress","which","preventDefault","stopPropagation","onKeyPress","map","comment","postStyles","screenname","screen_name","months","Post","open","setOpen","data","refetch","isSuccess","comVis","setComVis","createdDate","Date","created_at","toLocaleString","timeZone","currentDate","timeDiff","Math","round","abs","getTime","toggleComments","handleRedirectProfile","getMonth","getDate","image_url","src","alt","Modal","onClose","Feed","feed","index","AuthRoute","rest","loggedIn","render","to","from","LoginPage","setUsername","password","setPassword","loginUser","handleLogin","pass","handleTestLogin","handleRegister","SuggestedUser","isLast","PostStyles","followed","Suggested","users","SidebarRight","FollowInfo","useParams","follower","isLoading1","isSuccess1","isFetching1","isFetching","following","isLoading2","isSuccess2","isFetching2","isFollowing","slice","isFollower","goBack","SubFeed","Profile","following_count","follower_count","Register","setScreenname","loginLoading","loginSuccess","useEffect","required","App","path","persistor","persistStore","ReactDOM","StrictMode","loading","basename","document","getElementById"],"mappings":"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","file":"static/js/main.a696a430.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-container\":\"app_app-container__25y9D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar-container\":\"SidebarRight_sidebar-container__1zSIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post-container\":\"Post_post-container__1eauk\",\"post-image\":\"Post_post-image__1eJ1c\",\"post-header\":\"Post_post-header__1RNuL\",\"material-icon-heart\":\"Post_material-icon-heart__2TuZ3\",\"material-icon-border-heart\":\"Post_material-icon-border-heart__Gei2f\",\"post-footer\":\"Post_post-footer__THcfM\",\"comment-ind-container\":\"Post_comment-ind-container__DWjBB\",\"action-icon\":\"Post_action-icon__2SJT8\",\"modal-image\":\"Post_modal-image__1AGpc\",\"action-item-container\":\"Post_action-item-container__3l-E3\",\"user-name-container\":\"Post_user-name-container__3UKS6\",\"screenname\":\"Post_screenname__fiKFS\",\"username\":\"Post_username__uDN1e\",\"post-avatar\":\"Post_post-avatar__1h6T7\",\"post-outer-container\":\"Post_post-outer-container__nvX_u\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    isLoggedIn: false,\r\n    user: \"\",\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.isLoggedIn = true;\r\n      state.user = action.payload.user;\r\n    },\r\n    logout: (state) => {\r\n      state.isLoggedIn = false;\r\n      state.user = \"\";\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport type PostType = {\r\n  content: string;\r\n  username: string;\r\n  created_at: string;\r\n  liked: boolean;\r\n  post_id: number;\r\n  image_url: string;\r\n  like_count: number;\r\n  comment_count: number;\r\n  screen_name: string;\r\n};\r\n\r\nexport type User = {\r\n  username: string;\r\n  screen_name: string;\r\n  follower_count: number;\r\n  following_count: number;\r\n  bio: string;\r\n};\r\n\r\nexport type FUser = {\r\n  username: string;\r\n  screen_name: string;\r\n  followed: boolean;\r\n};\r\n\r\nexport const apiSlice = createApi({\r\n  reducerPath: \"api\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://safe-wave-92099.herokuapp.com/\",\r\n    credentials: \"include\",\r\n  }),\r\n  tagTypes: [\"Post\", \"Comment\"],\r\n  endpoints: (builder) => ({\r\n    getComments: builder.query<any, string | number>({\r\n      query: (post_id) => `posts/${post_id}/comments`,\r\n      providesTags: (result, error, arg) => [{ type: \"Comment\", id: arg }],\r\n    }),\r\n    getFollower: builder.query<FUser[], string>({\r\n      query: (username) => `user/${username}/follower`,\r\n    }),\r\n    getFollowing: builder.query<FUser[], string>({\r\n      query: (username) => `user/${username}/following`,\r\n    }),\r\n    getUser: builder.query<User, string>({\r\n      query: (username) => `user/${username}`,\r\n    }),\r\n    getUserPosts: builder.query<PostType[], string>({\r\n      query: (username) => `user/${username}/posts`,\r\n    }),\r\n    getAllPosts: builder.query<PostType[], void>({\r\n      query: () => \"posts/getAllPosts\",\r\n      providesTags: [\"Post\"],\r\n    }),\r\n    getSuggestedUsers: builder.query<any, void>({\r\n      query: () => \"user/suggestedUsers\",\r\n    }),\r\n    getSubPosts: builder.query<PostType[], void>({\r\n      query: () => \"posts/getSubscribedPosts\",\r\n      providesTags: [\"Post\"],\r\n    }),\r\n    createComment: builder.mutation({\r\n      query: (body) => ({\r\n        url: \"/posts/createComment\",\r\n        method: \"POST\",\r\n        body: body,\r\n      }),\r\n      async onQueryStarted(body, { dispatch, queryFulfilled }) {\r\n        try {\r\n          await queryFulfilled;\r\n          dispatch(\r\n            apiSlice.util.updateQueryData(\"getAllPosts\", undefined, (posts) => {\r\n              console.log(\"patching\");\r\n              posts.forEach((post) => {\r\n                if (post.post_id === body.post_id) {\r\n                  post.comment_count++;\r\n                }\r\n              });\r\n            })\r\n          );\r\n          dispatch(\r\n            apiSlice.util.updateQueryData(\"getSubPosts\", undefined, (posts) => {\r\n              console.log(\"patching\");\r\n              posts.forEach((post) => {\r\n                if (post.post_id === body.post_id) {\r\n                  post.comment_count++;\r\n                }\r\n              });\r\n            })\r\n          );\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      },\r\n      invalidatesTags: (result, error, arg) => [\r\n        { type: \"Comment\", id: arg.post_id },\r\n      ],\r\n    }),\r\n    follow: builder.mutation({\r\n      query: (body) => ({\r\n        url: \"user/followUser\",\r\n        method: \"POST\",\r\n        body: body,\r\n      }),\r\n    }),\r\n    login: builder.mutation({\r\n      query: (body) => ({\r\n        url: \"account/login\",\r\n        method: \"POST\",\r\n        body: body,\r\n      }),\r\n    }),\r\n    register: builder.mutation({\r\n      query: (body) => ({\r\n        url: \"account/register\",\r\n        method: \"POST\",\r\n        body: body,\r\n      }),\r\n    }),\r\n    createPost: builder.mutation({\r\n      query: (postContent) => ({\r\n        url: \"posts/new\",\r\n        method: \"POST\",\r\n        body: postContent,\r\n      }),\r\n      invalidatesTags: [\"Post\"],\r\n    }),\r\n    likePost: builder.mutation<void, number>({\r\n      query: (post_id) => ({\r\n        url: \"posts/likePost\",\r\n        method: \"POST\",\r\n        body: { post_id },\r\n      }),\r\n      async onQueryStarted(post_id, { dispatch, queryFulfilled }) {\r\n        try {\r\n          //await queryFulfilled;\r\n          dispatch(\r\n            apiSlice.util.updateQueryData(\"getAllPosts\", undefined, (posts) => {\r\n              console.log(\"patching\");\r\n              posts.forEach((post) => {\r\n                if (post.post_id === post_id) {\r\n                  post.like_count++;\r\n                  post.liked = true;\r\n                }\r\n              });\r\n            })\r\n          );\r\n          dispatch(\r\n            apiSlice.util.updateQueryData(\"getSubPosts\", undefined, (posts) => {\r\n              console.log(\"patching\");\r\n              posts.forEach((post) => {\r\n                if (post.post_id === post_id) {\r\n                  post.like_count++;\r\n                  post.liked = true;\r\n                }\r\n              });\r\n            })\r\n          );\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      },\r\n    }),\r\n    unlikePost: builder.mutation<void, number>({\r\n      query: (post_id) => ({\r\n        url: \"posts/unlikePost\",\r\n        method: \"POST\",\r\n        body: { post_id },\r\n      }),\r\n      async onQueryStarted(post_id, { dispatch, queryFulfilled }) {\r\n        try {\r\n          //await queryFulfilled;\r\n          dispatch(\r\n            apiSlice.util.updateQueryData(\"getAllPosts\", undefined, (posts) => {\r\n              console.log(\"patching\");\r\n              posts.forEach((post) => {\r\n                if (post.post_id === post_id) {\r\n                  post.like_count--;\r\n                  post.liked = false;\r\n                }\r\n              });\r\n            })\r\n          );\r\n          dispatch(\r\n            apiSlice.util.updateQueryData(\"getSubPosts\", undefined, (posts) => {\r\n              console.log(\"patching\");\r\n              posts.forEach((post) => {\r\n                if (post.post_id === post_id) {\r\n                  post.like_count--;\r\n                  post.liked = false;\r\n                }\r\n              });\r\n            })\r\n          );\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetAllPostsQuery,\r\n  useGetSubPostsQuery,\r\n  useCreatePostMutation,\r\n  useLikePostMutation,\r\n  useUnlikePostMutation,\r\n  useGetUserQuery,\r\n  useGetUserPostsQuery,\r\n  useLoginMutation,\r\n  useRegisterMutation,\r\n  useGetSuggestedUsersQuery,\r\n  useFollowMutation,\r\n  useGetFollowerQuery,\r\n  useGetFollowingQuery,\r\n  useGetCommentsQuery,\r\n  useCreateCommentMutation,\r\n} = apiSlice;\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport authSlice from \"../reducers/authSlice\";\n\nimport { persistReducer } from \"redux-persist\";\nimport { apiSlice } from \"../reducers/apiSlice\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"auth\"],\n};\n\nconst reducers = combineReducers({\n  auth: authSlice,\n  [apiSlice.reducerPath]: apiSlice.reducer,\n});\nconst persistedReducer = persistReducer(persistConfig, reducers);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(apiSlice.middleware),\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export const baseURL = \"https://safe-wave-92099.herokuapp.com\";\r\nexport let headersList = {\r\n  \"Content-Type\": \"application/json\",\r\n};\r\nconst getSuggestedUsers = async () => {\r\n  const url = baseURL + \"/user/suggestedUsers\";\r\n  let res = await fetch(url, {\r\n    type: \"cors\",\r\n    method: \"GET\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n  });\r\n  let jsonRes = await res.json();\r\n  return jsonRes;\r\n};\r\n\r\nconst followUser = async (target) => {\r\n  const url = baseURL + \"/user/followUser\";\r\n  const body = {\r\n    target: target,\r\n  };\r\n  let res = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n    body: JSON.stringify(body),\r\n  });\r\n  let jsonRes = await res.json();\r\n  return jsonRes;\r\n};\r\n\r\nexport { getSuggestedUsers, followUser };\r\n","import { baseURL, headersList } from \"./userServices\";\r\n\r\nlet userLogin = async (user, pass) => {\r\n  let url = baseURL + \"/account/login\";\r\n  let body = {\r\n    user,\r\n    pass,\r\n  };\r\n  const result = await fetch(url, {\r\n    credentials: \"include\",\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    body: JSON.stringify(body),\r\n  });\r\n  // console.log(result);\r\n  return result;\r\n};\r\n\r\nlet userRegister = async (user, pass, screen_name) => {\r\n  let url = baseURL + \"/account/register\";\r\n  let body = {\r\n    user,\r\n    pass,\r\n    screen_name,\r\n  };\r\n  const result = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    body: JSON.stringify(body),\r\n  });\r\n  return result;\r\n};\r\n\r\nlet userLogout = async () => {\r\n  let url = baseURL + \"/account/logout\";\r\n  const result = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: headersList,\r\n    credentials: \"include\",\r\n  });\r\n  return result;\r\n};\r\nexport { userRegister, userLogin, userLogout };\r\n","import Styles from \"./Sidebar.module.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport { userLogout } from \"../../services/accountServices\";\r\nimport { logout } from \"../../reducers/authSlice\";\r\nimport TextSnippetIcon from \"@mui/icons-material/TextSnippet\";\r\nimport { apiSlice } from \"../../reducers/apiSlice\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport PersonOutlinedIcon from \"@mui/icons-material/PersonOutlined\";\r\nimport HomeOutlinedIcon from \"@mui/icons-material/HomeOutlined\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport ViewColumnOutlinedIcon from \"@mui/icons-material/ViewColumnOutlined\";\r\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\r\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\n\r\nconst Sidebar = (): JSX.Element => {\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n  const user = useAppSelector((state) => state.auth.user);\r\n  const handleNavClick = async (e: any) => {\r\n    let option = e.currentTarget.id;\r\n    console.log(\"nav clicked\", option);\r\n    // if (option === \"/all\") {\r\n    //   dispatch(updateAllPosts());\r\n    // } else if (option === \"/subscribed\") {\r\n    //   dispatch(updateSubscribedPosts());\r\n    // }\r\n    // dispatch(\r\n    //   api.endpoints.getPosts.initiate(\r\n    //     { count: 5 },\r\n    //     { subscribe: false, forceRefetch: true }\r\n\r\n    if (option === \"/all\") {\r\n      console.log(\"dispatching refetch\");\r\n      dispatch(\r\n        apiSlice.endpoints.getAllPosts.initiate(undefined, {\r\n          subscribe: false,\r\n          forceRefetch: true,\r\n        })\r\n      );\r\n    } else if (option === \"/subscribed\") {\r\n      console.log(\"sub posts\");\r\n      dispatch(\r\n        apiSlice.endpoints.getSubPosts.initiate(undefined, {\r\n          subscribe: false,\r\n          forceRefetch: true,\r\n        })\r\n      );\r\n    }\r\n    history.push(option);\r\n  };\r\n\r\n  const handleLogout = async (e: any) => {\r\n    await userLogout();\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <div className={Styles[\"sidebar-outer-container\"]}>\r\n      <div className={Styles[\"sidebar-container\"]}>\r\n        <div\r\n          onClick={handleNavClick}\r\n          id=\"/all\"\r\n          className={Styles[\"sidebar-logo-container\"]}\r\n        >\r\n          <TextSnippetIcon className={Styles[\"sidebar-logo\"]} />\r\n        </div>\r\n        <div>\r\n          <div\r\n            onClick={handleNavClick}\r\n            id={`/profile/${user}`}\r\n            className={Styles[\"sidebar-item\"]}\r\n          >\r\n            {history.location.pathname.includes(\"profile\") ? (\r\n              <PersonIcon className={Styles[\"sidebar-logo\"]} />\r\n            ) : (\r\n              <PersonOutlinedIcon className={Styles[\"sidebar-logo\"]} />\r\n            )}\r\n            <span className={Styles[\"sidebar-item-text\"]}>Profile</span>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div\r\n            onClick={handleNavClick}\r\n            id=\"/all\"\r\n            className={Styles[\"sidebar-item\"]}\r\n          >\r\n            {history.location.pathname.includes(\"all\") ? (\r\n              <HomeIcon className={Styles[\"sidebar-logo\"]} />\r\n            ) : (\r\n              <HomeOutlinedIcon className={Styles[\"sidebar-logo\"]} />\r\n            )}\r\n            <span className={Styles[\"sidebar-item-text\"]}>All Posts</span>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div\r\n            onClick={handleNavClick}\r\n            id=\"/subscribed\"\r\n            className={Styles[\"sidebar-item\"]}\r\n          >\r\n            {history.location.pathname.includes(\"subscribed\") ? (\r\n              <ViewColumnIcon className={Styles[\"sidebar-logo\"]} />\r\n            ) : (\r\n              <ViewColumnOutlinedIcon className={Styles[\"sidebar-logo\"]} />\r\n            )}\r\n            <span className={Styles[\"sidebar-item-text\"]}>\r\n              Subscribed Posts\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <a\r\n            href=\"https://github.com/stanlp1/message-board/\"\r\n            className={Styles[\"sidebar-hyperlink\"]}\r\n          >\r\n            <GitHubIcon className={Styles[\"sidebar-logo\"]} />\r\n            <span className={Styles[\"sidebar-item-text\"]}>Github src</span>\r\n          </a>\r\n        </div>\r\n        <div className={Styles[\"sidebar-logout\"]}>\r\n          <div onClick={handleLogout} className={`${Styles[\"sidebar-item\"]}`}>\r\n            <LogoutIcon className={Styles[\"sidebar-logo\"]} />\r\n            <span className={Styles[\"sidebar-item-text\"]}>Logout</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { Button, CircularProgress } from \"@mui/material\";\r\nimport { Fragment } from \"react\";\r\nimport Styles from \"./LoadingButton.module.css\";\r\nlet LoadingButton = ({\r\n  type,\r\n  disabledText,\r\n  onClick,\r\n  className,\r\n  variant,\r\n  isLoading,\r\n  content,\r\n  disabled,\r\n  disabledClass,\r\n}: any) => {\r\n  return (\r\n    <Button\r\n      type={type}\r\n      disabled={isLoading || disabled}\r\n      variant={variant}\r\n      className={\r\n        disabled === false ? className : `${disabledClass} ${className}`\r\n      }\r\n      onClick={onClick}\r\n    >\r\n      {isLoading ? (\r\n        <Fragment>\r\n          <CircularProgress className={Styles[\"login-circular-indicator\"]} />\r\n        </Fragment>\r\n      ) : disabled ? (\r\n        disabledText ? (\r\n          disabledText\r\n        ) : (\r\n          content\r\n        )\r\n      ) : (\r\n        content\r\n      )}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default LoadingButton;\r\n","import { useState } from \"react\";\r\nimport { useAppSelector } from \"../../app/hooks\";\r\nimport Styles from \"./PostForm.module.css\";\r\nimport { useCreatePostMutation } from \"../../reducers/apiSlice\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport LoadingButton from \"../common/LoadingButton\";\r\n\r\nfunction stringToColor(string: string) {\r\n  let hash = 0;\r\n  let i;\r\n\r\n  /* eslint-disable no-bitwise */\r\n  for (i = 0; i < string.length; i += 1) {\r\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  let color = \"#\";\r\n\r\n  for (i = 0; i < 3; i += 1) {\r\n    const value = (hash >> (i * 8)) & 0xff;\r\n    color += `00${value.toString(16)}`.substr(-2);\r\n  }\r\n  /* eslint-enable no-bitwise */\r\n\r\n  return color;\r\n}\r\n\r\nexport function stringAvatar(name: string) {\r\n  return {\r\n    sx: {\r\n      bgcolor: stringToColor(name),\r\n    },\r\n    children: name[0].toUpperCase() + name[1],\r\n  };\r\n}\r\n\r\nconst PostForm = (): JSX.Element => {\r\n  const [post, setPost] = useState(\"\");\r\n  let username = useAppSelector((state) => state.auth.user);\r\n  const [image, setImage] = useState(\"\");\r\n  const [createPost, { isLoading }] = useCreatePostMutation();\r\n  const handleNewPost = async () => {\r\n    await createPost({ content: post, image }).unwrap();\r\n    //await makeNewPost(post, image);\r\n    // if (type === \"all\") dispatch(updateAllPosts());\r\n    // else if (type === \"subscribed\") dispatch(updateSubscribedPosts());\r\n  };\r\n  return (\r\n    <div className={Styles[\"post-form-outer-container\"]}>\r\n      <Avatar\r\n        className={Styles[\"post-form-avatar\"]}\r\n        {...stringAvatar(username)}\r\n      ></Avatar>\r\n      <div className={Styles[\"post-form-container\"]}>\r\n        <textarea\r\n          placeholder=\"Whats Happening?\"\r\n          className={Styles[\"post-text-area\"]}\r\n          onChange={(e) => setPost(e.target.value)}\r\n        ></textarea>\r\n        <div className={Styles[\"post-submit-container\"]}>\r\n          <input\r\n            onChange={(e) => setImage(e.target.value)}\r\n            className={Styles[\"post-image-input\"]}\r\n            type=\"text\"\r\n            placeholder=\"Image URL(optional)\"\r\n          ></input>\r\n          <LoadingButton\r\n            disabled={post === \"\"}\r\n            disabledClass={Styles[\"post-form-button-disabled\"]}\r\n            className={Styles[\"post-form-button\"]}\r\n            onClick={handleNewPost}\r\n            variant=\"contained\"\r\n            isLoading={isLoading}\r\n            content=\"Post\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","import { useState } from \"react\";\r\nimport Styles from \"./PostComments.module.css\";\r\nimport postStyles from \"./Post.module.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useCreateCommentMutation } from \"../../reducers/apiSlice\";\r\nconst PostComments = ({\r\n  comments,\r\n  post_id,\r\n  refreshCom,\r\n}: {\r\n  refreshCom: () => void;\r\n  post_id: number;\r\n  comments: { screen_name: string; username: string; content: string }[];\r\n}): JSX.Element => {\r\n  const [createComment, { isLoading }] = useCreateCommentMutation();\r\n  const history = useHistory();\r\n  const [postContent, setPostContent] = useState(\"\");\r\n  const handleNewComment = async () => {\r\n    createComment({ post_id, content: postContent });\r\n  };\r\n\r\n  const handleKeyPress = async (e: any) => {\r\n    if (e.which === 13) {\r\n      e.preventDefault();\r\n      handleNewComment();\r\n      //refreshCom();\r\n    }\r\n  };\r\n  return (\r\n    <div className={Styles[\"comments-container\"]}>\r\n      <div\r\n        onClick={(e) => e.stopPropagation()}\r\n        className={Styles[\"comments-input-container\"]}\r\n      >\r\n        <textarea\r\n          onKeyPress={handleKeyPress}\r\n          onChange={(e) => setPostContent(e.target.value)}\r\n          className={Styles[\"comments-input\"]}\r\n        ></textarea>\r\n      </div>\r\n\r\n      {comments.map((comment) => (\r\n        <div className={Styles[\"comments-comment\"]}>\r\n          <div\r\n            onClick={() => history.push(`/profile/${comment.username}`)}\r\n            className={postStyles[\"user-name-container\"]}\r\n          >\r\n            <div className={postStyles.screenname}>{comment.screen_name}</div>\r\n            <div className={postStyles.username}>@{comment.username}</div>\r\n          </div>\r\n          <p>{comment.content}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostComments;\r\n","import { useState } from \"react\";\r\nimport { useGetCommentsQuery } from \"../../reducers/apiSlice\";\r\nimport Styles from \"./Post.module.css\";\r\nimport PostComments from \"./PostComments\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport CommentIcon from \"@mui/icons-material/Comment\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport { Modal } from \"@mui/material\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { stringAvatar } from \"./PostForm\";\r\nimport {\r\n  PostType,\r\n  useLikePostMutation,\r\n  useUnlikePostMutation,\r\n} from \"../../reducers/apiSlice\";\r\nimport { useHistory } from \"react-router\";\r\nconst months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\",\r\n];\r\n\r\nconst Post = ({ post }: { post: PostType }) => {\r\n  const [open, setOpen] = useState(false);\r\n  // const [comments, setComments] = useState<\r\n  //   { screen_name: string; username: string; content: string }[]\r\n  // >([]);\r\n  const {\r\n    data: comments,\r\n    isLoading,\r\n    isSuccess,\r\n    refetch,\r\n  } = useGetCommentsQuery(post.post_id);\r\n  const history = useHistory();\r\n  const [likePost] = useLikePostMutation();\r\n  const [unlikePost] = useUnlikePostMutation();\r\n  const [comVis, setComVis] = useState(false);\r\n  const createdDate = new Date(\r\n    new Date(post.created_at).toLocaleString(\"en-US\", {\r\n      timeZone: \"America/Los_Angeles\",\r\n    })\r\n  );\r\n  const currentDate = new Date();\r\n  const timeDiff = Math.round(\r\n    Math.abs(createdDate.getTime() - currentDate.getTime()) / 36e5\r\n  );\r\n  //console.log(createdDate, currentDate, timeDiff);\r\n  const handleLike = (e: any) => {\r\n    e.stopPropagation();\r\n    likePost(post.post_id);\r\n\r\n    //dispatch(updateLikePost(post_id));\r\n  };\r\n\r\n  const handleDislike = (e: any) => {\r\n    e.stopPropagation();\r\n    unlikePost(post.post_id);\r\n  };\r\n\r\n  // const refreshComments = async () => {\r\n  //   let coms = await getComments(post.post_id);\r\n  //   console.log(coms);\r\n  //   setComments(coms);\r\n  // };\r\n  const toggleComments = async () => {\r\n    // if (!comVis) refreshComments();\r\n    setComVis(!comVis);\r\n  };\r\n\r\n  const handleRedirectProfile = async () => {\r\n    history.push(`/profile/${post.username}`);\r\n  };\r\n  return (\r\n    <div onClick={toggleComments} className={Styles[\"post-outer-container\"]}>\r\n      <Avatar\r\n        className={Styles[\"post-avatar\"]}\r\n        {...stringAvatar(post.username)}\r\n      />\r\n      <div className={Styles[\"post-container\"]}>\r\n        <div>\r\n          <div className={Styles[\"post-header\"]}>\r\n            <div\r\n              onClick={handleRedirectProfile}\r\n              className={Styles[\"user-name-container\"]}\r\n            >\r\n              <div className={Styles.screenname}>{post.screen_name}</div>\r\n              <div className={Styles.username}>@{post.username}</div>\r\n              <div className={Styles.username}>\r\n                {timeDiff > 24\r\n                  ? `${months[createdDate.getMonth()]} ${createdDate.getDate()}`\r\n                  : `${timeDiff}h`}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p>{post.content}</p>\r\n          {post.image_url !== null && (\r\n            <img\r\n              onClick={() => setOpen(true)}\r\n              className={Styles[\"post-image\"]}\r\n              src={post.image_url}\r\n              alt={post.username}\r\n            ></img>\r\n          )}\r\n          <div className={Styles[\"post-footer\"]}>\r\n            <div\r\n              className={`${Styles[\"comment-ind-container\"]} ${Styles[\"action-item-container\"]} `}\r\n            >\r\n              <CommentIcon className={Styles[\"action-icon\"]}></CommentIcon>\r\n              <span>{post.comment_count}</span>\r\n            </div>\r\n\r\n            <div\r\n              className={`\r\n                ${\r\n                  post.liked\r\n                    ? Styles[\"material-icon-heart\"]\r\n                    : Styles[\"material-icon-border-heart\"]\r\n                } ${Styles[\"action-item-container\"]}`}\r\n            >\r\n              {post.liked ? (\r\n                <FavoriteIcon\r\n                  className={Styles[\"action-icon\"]}\r\n                  onClick={handleDislike}\r\n                />\r\n              ) : (\r\n                <FavoriteBorderIcon\r\n                  className={Styles[\"action-icon\"]}\r\n                  onClick={handleLike}\r\n                />\r\n              )}\r\n              <span>{post.like_count}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {comVis && (\r\n          <PostComments\r\n            refreshCom={refetch}\r\n            post_id={post.post_id}\r\n            comments={comments}\r\n          ></PostComments>\r\n        )}\r\n        {post.image_url !== null && (\r\n          <Modal open={open} onClose={() => setOpen(false)}>\r\n            <img\r\n              className={Styles[\"modal-image\"]}\r\n              src={post.image_url}\r\n              alt={post.username}\r\n            ></img>\r\n          </Modal>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { PostType, useGetAllPostsQuery } from \"../../reducers/apiSlice\";\r\nimport Styles from \"./Feed.module.css\";\r\nimport PostForm from \"./PostForm\";\r\nimport Post from \"./Post\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nconst Feed = (): JSX.Element => {\r\n  //const feed = useAppSelector((state) => state.feed);\r\n  // const dispatch = useAppDispatch();\r\n  // const user = useAppSelector((state) => state.auth.user);\r\n  const { data: feed, isLoading, isSuccess } = useGetAllPostsQuery();\r\n\r\n  let content;\r\n  // useEffect(() => {\r\n  //   if (user !== \"\") {\r\n  //     if (type === \"all\") {\r\n  //       dispatch(updateAllPosts());\r\n  //     } else if (type === \"subscribed\") {\r\n  //       dispatch(updateSubscribedPosts());\r\n  //     }\r\n  //   }\r\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, [user, dispatch]);\r\n  if (isLoading)\r\n    content = (\r\n      <CircularProgress\r\n        className={Styles[\"loading-indicator\"]}\r\n      ></CircularProgress>\r\n    );\r\n  else if (isSuccess)\r\n    content = feed!.map((post: PostType, index: any) => (\r\n      <Post key={post.post_id} post={post}></Post>\r\n    ));\r\n  return (\r\n    <div className={Styles[\"feed-container\"]}>\r\n      <h3 className={Styles[\"feed-header\"]}>All</h3>\r\n      <PostForm></PostForm>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","import { Route, Redirect } from \"react-router\";\r\nimport { useAppSelector } from \"../../app/hooks\";\r\n\r\nconst AuthRoute = ({ children, ...rest }: any) => {\r\n  const loggedIn = useAppSelector((state) => state.auth.isLoggedIn);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        loggedIn ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthRoute;\r\n","import { login } from \"../../reducers/authSlice\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport LoadingButton from \"../common/LoadingButton\";\r\nimport { useHistory } from \"react-router\";\r\nimport Styles from \"./LoginPage.module.css\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useLoginMutation } from \"../../reducers/apiSlice\";\r\n\r\nconst LoginPage = (): JSX.Element => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  let [loginUser, { isSuccess, isLoading }] = useLoginMutation();\r\n  let loggedIn = useAppSelector((state) => state.auth.isLoggedIn);\r\n  let history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n\r\n  if (loggedIn) {\r\n    history.push(\"/all\");\r\n  }\r\n  const handleLogin = async (e: any) => {\r\n    e.preventDefault();\r\n    loginUser({ user: username, pass: password });\r\n    // const loginResult = await userLogin(username, password);\r\n    // if (loginResult.status === 202) {\r\n    //   dispatch(login({ user: username }));\r\n    //   history.push(\"/feed\");\r\n    // }\r\n  };\r\n\r\n  const handleTestLogin = async (e: any) => {\r\n    e.preventDefault();\r\n    setUsername(\"test\");\r\n    loginUser({ user: \"test\", pass: \"test\" });\r\n  };\r\n\r\n  const handleRegister = async (e: any) => {\r\n    e.preventDefault();\r\n    history.push(\"/register\");\r\n  };\r\n\r\n  if (isSuccess) {\r\n    dispatch(login({ user: username }));\r\n    history.push(\"/feed\");\r\n  }\r\n\r\n  return (\r\n    <form className={Styles[\"login-form-container\"]}>\r\n      <label>\r\n        <b>Username</b>\r\n      </label>\r\n      <input\r\n        className={Styles[\"login-form-input\"]}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        placeholder=\"Username\"\r\n        type=\"text\"\r\n      ></input>\r\n      <label>\r\n        <b>Password</b>\r\n      </label>\r\n      <input\r\n        className={Styles[\"login-form-input\"]}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        placeholder=\"Password\"\r\n        type=\"password\"\r\n      ></input>\r\n      <div className={Styles[\"login-button-container\"]}>\r\n        <LoadingButton\r\n          variant=\"outlined\"\r\n          className={`${Styles[\"login-form-button\"]}`}\r\n          onClick={handleLogin}\r\n          content=\"Log In\"\r\n          isLoading={isLoading}\r\n          disabled={username === \"\" || password === \"\"}\r\n        ></LoadingButton>\r\n        <Button\r\n          variant=\"outlined\"\r\n          className={Styles[\"login-form-button\"]}\r\n          onClick={handleRegister}\r\n        >\r\n          Sign Up\r\n        </Button>\r\n      </div>\r\n\r\n      <LoadingButton\r\n        variant=\"outlined\"\r\n        className={`${Styles[\"login-form-button\"]}`}\r\n        onClick={handleTestLogin}\r\n        content=\"Log Into Test Account\"\r\n        isLoading={isLoading}\r\n      ></LoadingButton>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import { useHistory } from \"react-router\";\r\nimport Styles from \"./Suggested.module.css\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport PostStyles from \"../Feed/Post.module.css\";\r\nimport { stringAvatar } from \"../Feed/PostForm\";\r\nimport LoadingButton from \"../common/LoadingButton\";\r\nimport { useFollowMutation } from \"../../reducers/apiSlice\";\r\n\r\nconst SuggestedUser = ({\r\n  user,\r\n  isLast,\r\n}: {\r\n  user: any;\r\n  isLast: any;\r\n}): JSX.Element => {\r\n  let [follow, { isLoading, isSuccess }] = useFollowMutation();\r\n  const history = useHistory();\r\n  const handleFollow = () => {\r\n    follow({ target: user.username });\r\n  };\r\n\r\n  const handleRedirectProfile = async () => {\r\n    history.push(`/profile/${user.username}`);\r\n  };\r\n  return (\r\n    <div\r\n      className={`${Styles[\"suggested-entry\"]} ${\r\n        isLast && Styles[\"last-element\"]\r\n      }`}\r\n    >\r\n      <div\r\n        onClick={handleRedirectProfile}\r\n        className={Styles[\"inner-container\"]}\r\n      >\r\n        <Avatar\r\n          className={Styles[\"suggested-avatar\"]}\r\n          {...stringAvatar(user.username)}\r\n        />\r\n        <div>\r\n          <div className={PostStyles.screenname}>{user.screen_name}</div>@\r\n          {user.username}\r\n        </div>\r\n      </div>\r\n      <LoadingButton\r\n        disabledClass={Styles[\"disabled-button\"]}\r\n        disabled={isSuccess || user.followed === true}\r\n        className={Styles[\"follow-button\"]}\r\n        onClick={handleFollow}\r\n        isLoading={isLoading}\r\n        variant=\"contained\"\r\n        content=\"Follow\"\r\n        disabledText=\"Followed\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuggestedUser;\r\n","import Styles from \"./Suggested.module.css\";\r\nimport SuggestedUser from \"./SuggestedUser\";\r\nimport { useGetSuggestedUsersQuery } from \"../../reducers/apiSlice\";\r\nconst Suggested = (): JSX.Element => {\r\n  const { data: users, isSuccess } = useGetSuggestedUsersQuery();\r\n  // useEffect(() => {\r\n  //   const popUsers = async () => {\r\n  //     let userList = await getSuggestedUsers();\r\n  //     // console.log(userList);\r\n  //     setUsers(userList);\r\n  //   };\r\n  //   popUsers();\r\n  // }, []);\r\n  return (\r\n    <div className={Styles[\"widget-container\"]}>\r\n      <h4 className={Styles[\"widget-title\"]}>Suggested Users</h4>\r\n      {isSuccess &&\r\n        users.map((user: any, index: any) => (\r\n          <SuggestedUser\r\n            isLast={index === users.length - 1}\r\n            key={user.username}\r\n            user={user}\r\n          ></SuggestedUser>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Suggested;\r\n","import Suggested from \"../SidebarWidgets/Suggested\";\r\nimport Styles from \"./SidebarRight.module.css\";\r\n\r\nconst SidebarRight = (): JSX.Element => {\r\n  return (\r\n    <div className={Styles[\"sidebar-container\"]}>\r\n      <Suggested />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarRight;\r\n","import Styles from \"./Profile.module.css\";\r\nimport { Avatar, CircularProgress } from \"@mui/material\";\r\nimport {\r\n  FUser,\r\n  useGetFollowerQuery,\r\n  useGetFollowingQuery,\r\n} from \"../../reducers/apiSlice\";\r\nimport Post from \"../Feed/Post\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { useHistory } from \"react-router\";\r\nimport SuggestedUser from \"../SidebarWidgets/SuggestedUser\";\r\n\r\nlet FollowInfo = (): JSX.Element => {\r\n  let history = useHistory();\r\n  let { username } = useParams<{ username: string }>();\r\n\r\n  const {\r\n    data: follower,\r\n    isLoading: isLoading1,\r\n    isSuccess: isSuccess1,\r\n    isFetching: isFetching1,\r\n  } = useGetFollowerQuery(username);\r\n\r\n  const {\r\n    data: following,\r\n    isLoading: isLoading2,\r\n    isSuccess: isSuccess2,\r\n    isFetching: isFetching2,\r\n  } = useGetFollowingQuery(username);\r\n\r\n  let handleFollowingClick = () => {\r\n    history.push(`/profile/${username}/following`);\r\n  };\r\n\r\n  let handleFollowerClick = () => {\r\n    history.push(`/profile/${username}/followers`);\r\n  };\r\n\r\n  let content;\r\n\r\n  let isFollowing = history.location.pathname.slice(-9).includes(\"following\");\r\n  let isFollower = history.location.pathname.slice(-9).includes(\"followers\");\r\n\r\n  if (isFollowing) {\r\n    if (isLoading2 || isFetching2) {\r\n      content = <CircularProgress className={Styles[\"loading-indicator\"]} />;\r\n    } else if (isSuccess2) {\r\n      content = following!.map((user: FUser, index: any) => (\r\n        <SuggestedUser isLast={false} key={user.username} user={user} />\r\n      ));\r\n    }\r\n  } else if (isFollower) {\r\n    if (isLoading1 || isFetching1) {\r\n      content = <CircularProgress className={Styles[\"loading-indicator\"]} />;\r\n    } else if (isSuccess1) {\r\n      content = follower!.map((user: FUser, index: any) => (\r\n        <SuggestedUser isLast={false} key={user.username} user={user} />\r\n      ));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={Styles[\"profile-container\"]}>\r\n      <div className={Styles[\"profile-header-container\"]}>\r\n        <ArrowBackIcon\r\n          onClick={() => history.goBack()}\r\n          className={Styles[\"back-arrow-icon\"]}\r\n        />\r\n      </div>\r\n      <div className={Styles[\"follower-page-button-container\"]}>\r\n        <div\r\n          onClick={handleFollowerClick}\r\n          className={Styles[\"follower-page-button-inner\"]}\r\n        >\r\n          <div className={Styles[\"follower-page-button\"]}>\r\n            {isFollower ? (\r\n              <>\r\n                <b>Followers</b>\r\n                <div className={Styles[\"follower-button-highlight\"]}></div>\r\n              </>\r\n            ) : (\r\n              \"Followers\"\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div\r\n          onClick={handleFollowingClick}\r\n          className={Styles[\"follower-page-button-inner\"]}\r\n        >\r\n          <div className={Styles[\"follower-page-button\"]}>\r\n            {isFollowing ? (\r\n              <>\r\n                <b>Following</b>\r\n                <div className={Styles[\"follower-button-highlight\"]}></div>\r\n              </>\r\n            ) : (\r\n              \"Following\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FollowInfo;\r\n","import { PostType, useGetSubPostsQuery } from \"../../reducers/apiSlice\";\r\nimport Styles from \"./Feed.module.css\";\r\nimport PostForm from \"./PostForm\";\r\nimport Post from \"./Post\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nconst SubFeed = (): JSX.Element => {\r\n  const { data: feed, isLoading, isSuccess } = useGetSubPostsQuery();\r\n\r\n  let content;\r\n\r\n  if (isLoading)\r\n    content = (\r\n      <CircularProgress\r\n        className={Styles[\"loading-indicator\"]}\r\n      ></CircularProgress>\r\n    );\r\n  else if (isSuccess)\r\n    content = feed!.map((post: PostType, index: any) => (\r\n      <Post post={post}></Post>\r\n    ));\r\n\r\n  return (\r\n    <div className={Styles[\"feed-container\"]}>\r\n      <h3 className={Styles[\"feed-header\"]}>Subscribed</h3>\r\n      <PostForm></PostForm>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubFeed;\r\n","import Styles from \"./Profile.module.css\";\r\nimport { Avatar, CircularProgress } from \"@mui/material\";\r\nimport {\r\n  PostType,\r\n  useGetUserPostsQuery,\r\n  useGetUserQuery,\r\n} from \"../../reducers/apiSlice\";\r\nimport Post from \"../Feed/Post\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { useHistory } from \"react-router\";\r\nlet Profile = (): JSX.Element => {\r\n  let history = useHistory();\r\n  let { username } = useParams<{ username: string }>();\r\n  const { data: user } = useGetUserQuery(username);\r\n  const {\r\n    data: posts,\r\n    isLoading,\r\n    isSuccess,\r\n    isFetching,\r\n  } = useGetUserPostsQuery(username);\r\n\r\n  let content;\r\n\r\n  if (isLoading || isFetching) {\r\n    content = <CircularProgress className={Styles[\"loading-indicator\"]} />;\r\n  } else if (isSuccess)\r\n    content = posts!.map((post: PostType, index: any) => (\r\n      <Post key={post.post_id} post={post}></Post>\r\n    ));\r\n\r\n  let handleFollowingClick = () => {\r\n    history.push(`/profile/${username}/following`);\r\n  };\r\n  let handleFollowerClick = () => {\r\n    history.push(`/profile/${username}/followers`);\r\n  };\r\n  return (\r\n    <div className={Styles[\"profile-container\"]}>\r\n      <div className={Styles[\"profile-header-container\"]}>\r\n        <ArrowBackIcon\r\n          onClick={() => history.goBack()}\r\n          className={Styles[\"back-arrow-icon\"]}\r\n        />\r\n      </div>\r\n      <div className={Styles[\"profile-image-container\"]}></div>\r\n      <div className={Styles[\"name-section\"]}>\r\n        <Avatar className={Styles[\"profile-avatar\"]} />\r\n        <h2>{user?.screen_name}</h2>\r\n        <div>@{user?.username}</div>\r\n        <div className={Styles[\"follow-section\"]}>\r\n          <span\r\n            onClick={handleFollowingClick}\r\n            className={Styles[\"follow-label-container\"]}\r\n          >\r\n            {user?.following_count}{\" \"}\r\n            <span className={Styles[\"follow-label\"]}>Following</span>\r\n          </span>\r\n          <span\r\n            onClick={handleFollowerClick}\r\n            className={Styles[\"follow-label-container\"]}\r\n          >\r\n            {user?.follower_count}{\" \"}\r\n            <span className={Styles[\"follow-label\"]}>Follower</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { login } from \"../../reducers/authSlice\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Styles from \"../LoginPage/LoginPage.module.css\";\r\nimport LoadingButton from \"../common/LoadingButton\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useLoginMutation, useRegisterMutation } from \"../../reducers/apiSlice\";\r\nconst Register = (): JSX.Element => {\r\n  const [screen_name, setScreenname] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  let [register, { isLoading, isSuccess }] = useRegisterMutation();\r\n  let [loginUser, { isLoading: loginLoading, isSuccess: loginSuccess }] =\r\n    useLoginMutation();\r\n  let loggedIn = useAppSelector((state) => state.auth.isLoggedIn);\r\n  let history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n\r\n  if (loggedIn) history.push(\"/all\");\r\n\r\n  const handleRegister = async (e: any) => {\r\n    e.preventDefault();\r\n    register({ user: username, pass: password, screen_name });\r\n    // const registerResult = await userRegister(username, password, screen_name);\r\n    // if (registerResult.status === 202) {\r\n    //   const loginResult = await userLogin(username, password);\r\n    //   if (loginResult.status === 202) {\r\n    //     dispatch(login({ user: username }));\r\n    //     history.push(\"/all\");\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      loginUser({ user: username, pass: password });\r\n    }\r\n  }, [isSuccess, loginUser, password, username]);\r\n\r\n  if (loginSuccess) {\r\n    dispatch(login({ user: username }));\r\n    history.push(\"/feed\");\r\n  }\r\n\r\n  return (\r\n    <form className={Styles[\"login-form-container\"]}>\r\n      <label>\r\n        <b>Screen Name</b>\r\n      </label>\r\n      <input\r\n        className={Styles[\"login-form-input\"]}\r\n        onChange={(e) => setScreenname(e.target.value)}\r\n        placeholder=\"Screen Name\"\r\n        type=\"text\"\r\n        required\r\n      ></input>\r\n      <label>\r\n        <b>Username</b>\r\n      </label>\r\n      <input\r\n        className={Styles[\"login-form-input\"]}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        placeholder=\"Username\"\r\n        type=\"text\"\r\n        required\r\n      ></input>\r\n      <label>\r\n        <b>Password</b>\r\n      </label>\r\n      <input\r\n        className={Styles[\"login-form-input\"]}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        placeholder=\"Password\"\r\n        type=\"password\"\r\n        required\r\n      ></input>\r\n      <div className={Styles[\"login-button-container\"]}>\r\n        <LoadingButton\r\n          type=\"submit\"\r\n          variant=\"outlined\"\r\n          className={Styles[\"login-form-input\"]}\r\n          onClick={handleRegister}\r\n          isLoading={isLoading || loginLoading}\r\n          content=\"Sign Up\"\r\n          disabled={username === \"\" || password === \"\" || screen_name === \"\"}\r\n        ></LoadingButton>\r\n        <Button\r\n          variant=\"outlined\"\r\n          className={Styles[\"login-form-input\"]}\r\n          onClick={() => history.push(\"/login\")}\r\n        >\r\n          Back to Login Page\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import Sidebar from \"./components/Sidebar/Sidebar\";\r\nimport Feed from \"./components/Feed/Feed\";\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\nimport AuthRoute from \"./components/AuthRoute/AuthRoute\";\r\nimport LoginPage from \"./components/LoginPage/LoginPage\";\r\nimport Styles from \"./app.module.css\";\r\nimport SidebarRight from \"./components/SidebarRight/SidebarRight\";\r\nimport FollowInfo from \"./components/Profile/FollowInfo\";\r\nimport SubFeed from \"./components/Feed/SubFeed\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport Register from \"./components/Register/Register\";\r\n\r\nconst App = (): JSX.Element => {\r\n  return (\r\n    <div className={Styles[\"app-container\"]}>\r\n      <Switch>\r\n        <Route path=\"/login\">\r\n          <LoginPage></LoginPage>\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          <Register></Register>\r\n        </Route>\r\n        <AuthRoute path=\"/all\">\r\n          <Sidebar />\r\n          <Feed></Feed>\r\n          <SidebarRight />\r\n        </AuthRoute>\r\n        <AuthRoute path=\"/subscribed\">\r\n          <Sidebar />\r\n          <SubFeed></SubFeed>\r\n          <SidebarRight />\r\n        </AuthRoute>\r\n        <AuthRoute path=\"/profile/:username/followers\">\r\n          <Sidebar />\r\n          <FollowInfo />\r\n          <SidebarRight />\r\n        </AuthRoute>\r\n        <AuthRoute path=\"/profile/:username/following\">\r\n          <Sidebar />\r\n          <FollowInfo />\r\n          <SidebarRight />\r\n        </AuthRoute>\r\n        <AuthRoute path=\"/profile/:username\">\r\n          <Sidebar />\r\n          <Profile />\r\n          <SidebarRight />\r\n        </AuthRoute>\r\n\r\n        <AuthRoute path=\"/\">\r\n          <Redirect to=\"/all\"></Redirect>\r\n        </AuthRoute>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport App from \"./app\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nlet persistor = persistStore(store);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <HashRouter basename=\"/message-board\">\n          <App></App>\n        </HashRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-container\":\"Profile_profile-container__25Udl\",\"profile-header-container\":\"Profile_profile-header-container__1RwmA\",\"profile-image-container\":\"Profile_profile-image-container__3f9_L\",\"profile-avatar\":\"Profile_profile-avatar__23Wgy\",\"back-arrow-icon\":\"Profile_back-arrow-icon__2zzmd\",\"name-section\":\"Profile_name-section__2ocHA\",\"follow-section\":\"Profile_follow-section__imos-\",\"follow-label\":\"Profile_follow-label__1ekoR\",\"follow-label-container\":\"Profile_follow-label-container__3Zdcx\",\"loading-indicator\":\"Profile_loading-indicator__3CHQH\",\"follower-page-button-container\":\"Profile_follower-page-button-container__FifAH\",\"follower-page-button-inner\":\"Profile_follower-page-button-inner__1gMDu\",\"follower-page-button\":\"Profile_follower-page-button__3ro9c\",\"follower-button-highlight\":\"Profile_follower-button-highlight__32B21\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar-container\":\"Sidebar_sidebar-container__3ve-Y\",\"sidebar-outer-container\":\"Sidebar_sidebar-outer-container__UOMqw\",\"sidebar-logo-container\":\"Sidebar_sidebar-logo-container__3H_0c\",\"sidebar-logo\":\"Sidebar_sidebar-logo__2qQro\",\"sidebar-item\":\"Sidebar_sidebar-item__3tqF5\",\"sidebar-hyperlink\":\"Sidebar_sidebar-hyperlink__1Sv50\",\"sidebar-logout\":\"Sidebar_sidebar-logout__29fYi\",\"sidebar-item-text\":\"Sidebar_sidebar-item-text__23uI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-form-container\":\"LoginPage_login-form-container__2uptE\",\"login-form-input\":\"LoginPage_login-form-input__10So9\",\"login-form-button\":\"LoginPage_login-form-button__3hphZ\",\"login-button-container\":\"LoginPage_login-button-container__ZrLNH\",\"login-circular-indicator\":\"LoginPage_login-circular-indicator__1_ruz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"widget-container\":\"Suggested_widget-container__3P3du\",\"widget-title\":\"Suggested_widget-title__16gt1\",\"last-element\":\"Suggested_last-element__WHV-L\",\"suggested-entry\":\"Suggested_suggested-entry__1F6jb\",\"suggested-avatar\":\"Suggested_suggested-avatar__3wfD7\",\"inner-container\":\"Suggested_inner-container__qD884\",\"follow-button\":\"Suggested_follow-button__3D-HD\",\"disabled-button\":\"Suggested_disabled-button__1W885\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post-text-area\":\"PostForm_post-text-area__2tqHQ\",\"post-form-container\":\"PostForm_post-form-container__2adad\",\"post-form-outer-container\":\"PostForm_post-form-outer-container__21ASL\",\"post-form-avatar\":\"PostForm_post-form-avatar__qfdX1\",\"post-submit-container\":\"PostForm_post-submit-container__2C7HZ\",\"post-image-input\":\"PostForm_post-image-input__3-g9l\",\"post-form-button\":\"PostForm_post-form-button__27-oG\",\"post-form-button-disabled\":\"PostForm_post-form-button-disabled__1_tkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed-container\":\"Feed_feed-container__24Wie\",\"feed-header\":\"Feed_feed-header__3uiu4\",\"loading-indicator\":\"Feed_loading-indicator__XqhjX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments-container\":\"PostComments_comments-container__3uFEf\",\"comments-input-container\":\"PostComments_comments-input-container__3dFH5\",\"comments-input\":\"PostComments_comments-input__ow6cX\",\"comments-comment\":\"PostComments_comments-comment__1wGZk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-circular-indicator\":\"LoadingButton_login-circular-indicator__1elvg\"};"],"sourceRoot":""}